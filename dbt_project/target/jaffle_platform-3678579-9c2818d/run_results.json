{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:43:57.899727Z", "invocation_id": "de784b35-09c4-445d-b04e-c83dceb551a4", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.001568Z", "completed_at": "2025-06-27T20:43:57.006263Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.006506Z", "completed_at": "2025-06-27T20:43:57.724259Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7234878540039062, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.727789Z", "completed_at": "2025-06-27T20:43:57.733386Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.733645Z", "completed_at": "2025-06-27T20:43:57.745485Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01903700828552246, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.748211Z", "completed_at": "2025-06-27T20:43:57.751726Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.751954Z", "completed_at": "2025-06-27T20:43:57.755957Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009183883666992188, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.758693Z", "completed_at": "2025-06-27T20:43:57.762033Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.762266Z", "completed_at": "2025-06-27T20:43:57.766672Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009411096572875977, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.769137Z", "completed_at": "2025-06-27T20:43:57.771145Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.771354Z", "completed_at": "2025-06-27T20:43:57.775391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007526874542236328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.778004Z", "completed_at": "2025-06-27T20:43:57.781438Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.781644Z", "completed_at": "2025-06-27T20:43:57.785667Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008980035781860352, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.788206Z", "completed_at": "2025-06-27T20:43:57.790182Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.790391Z", "completed_at": "2025-06-27T20:43:57.794202Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0072078704833984375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.796655Z", "completed_at": "2025-06-27T20:43:57.799739Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.799964Z", "completed_at": "2025-06-27T20:43:57.803452Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008038043975830078, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.805897Z", "completed_at": "2025-06-27T20:43:57.808062Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.808271Z", "completed_at": "2025-06-27T20:43:57.811660Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006942033767700195, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.813982Z", "completed_at": "2025-06-27T20:43:57.815930Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.816134Z", "completed_at": "2025-06-27T20:43:57.819719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006938934326171875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.822074Z", "completed_at": "2025-06-27T20:43:57.824328Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.824574Z", "completed_at": "2025-06-27T20:43:57.828057Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007155179977416992, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.830348Z", "completed_at": "2025-06-27T20:43:57.833774Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.833998Z", "completed_at": "2025-06-27T20:43:57.837742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008713960647583008, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.840070Z", "completed_at": "2025-06-27T20:43:57.842385Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.842589Z", "completed_at": "2025-06-27T20:43:57.845976Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007043123245239258, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.848355Z", "completed_at": "2025-06-27T20:43:57.852301Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.852522Z", "completed_at": "2025-06-27T20:43:57.860011Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01305532455444336, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.862557Z", "completed_at": "2025-06-27T20:43:57.865638Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.865869Z", "completed_at": "2025-06-27T20:43:57.881587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0203092098236084, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:43:57.884079Z", "completed_at": "2025-06-27T20:43:57.888039Z"}, {"name": "execute", "started_at": "2025-06-27T20:43:57.888284Z", "completed_at": "2025-06-27T20:43:57.895191Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01235508918762207, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.9620051383972168, "args": {"log_file_max_bytes": 10485760, "log_level_file": "debug", "require_explicit_package_overrides_for_builtin_materializations": true, "write_json": true, "show": false, "select": ["jaffle_platform.marts.orders"], "resource_types": [], "require_resource_names_without_spaces": false, "include_saved_query": false, "static_parser": true, "print": true, "exclude": [], "require_batched_execution_for_custom_microbatch_strategy": false, "strict_mode": false, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "partial_parse": true, "source_freshness_run_project_hooks": false, "defer": false, "exclude_resource_types": [], "quiet": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "indirect_selection": "eager", "version_check": true, "log_format": "json", "which": "build", "printer_width": 80, "cache_selected_only": false, "use_colors_file": true, "use_colors": true, "export_saved_queries": false, "empty": false, "partial_parse_file_diff": true, "send_anonymous_usage_stats": false, "state_modified_compare_vars": false, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-3678579-9c2818d", "invocation_command": "dbt build --select jaffle_platform.marts.orders", "log_format_file": "json", "populate_cache": true, "show_resource_report": false, "macro_debugging": false, "vars": {}, "target_path": "target/jaffle_platform-3678579-9c2818d", "log_level": "info", "warn_error_options": {"include": [], "exclude": []}, "favor_state": false, "require_nested_cumulative_type_params": false, "introspect": true, "skip_nodes_if_on_run_start_fails": false, "require_yaml_configuration_for_mf_time_spines": false, "state_modified_compare_more_unrendered_values": false}}