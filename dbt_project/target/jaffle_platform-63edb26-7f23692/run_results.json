{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:32:44.243421Z", "invocation_id": "5eeab6c5-c132-4231-ad0d-78a16839f0da", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.104523Z", "completed_at": "2025-06-27T20:32:44.108607Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.108940Z", "completed_at": "2025-06-27T20:32:44.138007Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.034291982650756836, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_stores", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_stores\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as store_id,\n\n        ----------  strings\n        name as store_name,\n\n        ----------  timestamps\n        opened_at as opened_at,\n\n        ----------  numerics\n        tax_rate\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_stores\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.141803Z", "completed_at": "2025-06-27T20:32:44.147662Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.147967Z", "completed_at": "2025-06-27T20:32:44.160149Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019954204559326172, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_stg_stores_tax_rate__1__0.4b4a0f1520", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_stores\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.162817Z", "completed_at": "2025-06-27T20:32:44.165749Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.165963Z", "completed_at": "2025-06-27T20:32:44.169750Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00837397575378418, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_opened_at.7656b80b64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opened_at\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere opened_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.172293Z", "completed_at": "2025-06-27T20:32:44.174368Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.174591Z", "completed_at": "2025-06-27T20:32:44.179575Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00855112075805664, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_store_id.ebecf07ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.182078Z", "completed_at": "2025-06-27T20:32:44.184085Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.184300Z", "completed_at": "2025-06-27T20:32:44.188002Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007136106491088867, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_store_name.a23576c3a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_name\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.190548Z", "completed_at": "2025-06-27T20:32:44.192632Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.192843Z", "completed_at": "2025-06-27T20:32:44.196496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007332801818847656, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_tax_rate.b05a8726c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tax_rate\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere tax_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.199052Z", "completed_at": "2025-06-27T20:32:44.203162Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.203396Z", "completed_at": "2025-06-27T20:32:44.207140Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015221834182739258, "adapter_response": {}, "message": "Runtime Error in test relationships_order_items_store_id__store_id__ref_stg_stores_ (models/marts/order_items.yml)\n  Catalog Error: Table with name order_items does not exist!\n  Did you mean \"raw_items\"?\n  \n  LINE 16:     from \"jaffle_platform\".\"main\".\"order_items\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_order_items_store_id__store_id__ref_stg_stores_.3506d5359d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.216028Z", "completed_at": "2025-06-27T20:32:44.218683Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.218918Z", "completed_at": "2025-06-27T20:32:44.224188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012080192565917969, "adapter_response": {}, "message": "Runtime Error in test relationships_orders_store_id__store_id__ref_stg_stores_ (models/marts/orders.yml)\n  Catalog Error: Table with name orders does not exist!\n  Did you mean \"raw_orders\"?\n  \n  LINE 16:     from \"jaffle_platform\".\"main\".\"orders\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:32:44.229736Z", "completed_at": "2025-06-27T20:32:44.232897Z"}, {"name": "execute", "started_at": "2025-06-27T20:32:44.233146Z", "completed_at": "2025-06-27T20:32:44.238612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010306119918823242, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_stores_store_id.2e80d074c2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is not null\ngroup by store_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.20160388946533203, "args": {"log_level": "info", "log_level_file": "debug", "require_batched_execution_for_custom_microbatch_strategy": false, "partial_parse_file_diff": true, "partial_parse": true, "select": ["jaffle_platform.stg.stg_stores"], "require_explicit_package_overrides_for_builtin_materializations": true, "strict_mode": false, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-63edb26-7f23692", "resource_types": [], "state_modified_compare_vars": false, "warn_error_options": {"include": [], "exclude": []}, "macro_debugging": false, "use_colors_file": true, "log_file_max_bytes": 10485760, "require_resource_names_without_spaces": false, "source_freshness_run_project_hooks": false, "cache_selected_only": false, "require_yaml_configuration_for_mf_time_spines": false, "state_modified_compare_more_unrendered_values": false, "send_anonymous_usage_stats": false, "defer": false, "favor_state": false, "target_path": "target/jaffle_platform-63edb26-7f23692", "introspect": true, "version_check": true, "exclude_resource_types": [], "print": true, "vars": {}, "write_json": true, "empty": false, "static_parser": true, "show_resource_report": false, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "require_nested_cumulative_type_params": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "show": false, "quiet": false, "printer_width": 80, "log_format_file": "json", "use_colors": true, "log_format": "json", "include_saved_query": false, "exclude": [], "indirect_selection": "eager", "which": "build", "export_saved_queries": false, "populate_cache": true, "invocation_command": "dbt build --select jaffle_platform.stg.stg_stores", "skip_nodes_if_on_run_start_fails": false}}