{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:36:11.879440Z", "invocation_id": "cd585264-c2a1-43cd-bf9a-3badd40510ad", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.698896Z", "completed_at": "2025-06-27T20:36:11.706154Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.706394Z", "completed_at": "2025-06-27T20:36:11.719692Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02207207679748535, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.722229Z", "completed_at": "2025-06-27T20:36:11.726041Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.726279Z", "completed_at": "2025-06-27T20:36:11.730229Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009207010269165039, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.732567Z", "completed_at": "2025-06-27T20:36:11.735381Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.735604Z", "completed_at": "2025-06-27T20:36:11.739657Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00838017463684082, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.742037Z", "completed_at": "2025-06-27T20:36:11.744020Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.744230Z", "completed_at": "2025-06-27T20:36:11.748307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00754094123840332, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.750741Z", "completed_at": "2025-06-27T20:36:11.753749Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.753967Z", "completed_at": "2025-06-27T20:36:11.758090Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00862574577331543, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.760553Z", "completed_at": "2025-06-27T20:36:11.762764Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.762993Z", "completed_at": "2025-06-27T20:36:11.766760Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007585048675537109, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.769352Z", "completed_at": "2025-06-27T20:36:11.772145Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.772343Z", "completed_at": "2025-06-27T20:36:11.775893Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008044004440307617, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.778563Z", "completed_at": "2025-06-27T20:36:11.780708Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.780937Z", "completed_at": "2025-06-27T20:36:11.784610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007324934005737305, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.786969Z", "completed_at": "2025-06-27T20:36:11.788797Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.789018Z", "completed_at": "2025-06-27T20:36:11.792614Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00688481330871582, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.794854Z", "completed_at": "2025-06-27T20:36:11.796924Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.797152Z", "completed_at": "2025-06-27T20:36:11.800959Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007272958755493164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.803237Z", "completed_at": "2025-06-27T20:36:11.805231Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.805448Z", "completed_at": "2025-06-27T20:36:11.809926Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007935047149658203, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.812403Z", "completed_at": "2025-06-27T20:36:11.814405Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.814625Z", "completed_at": "2025-06-27T20:36:11.818496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007444858551025391, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.820889Z", "completed_at": "2025-06-27T20:36:11.824574Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.824803Z", "completed_at": "2025-06-27T20:36:11.831964Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012299776077270508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.834400Z", "completed_at": "2025-06-27T20:36:11.837285Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.837520Z", "completed_at": "2025-06-27T20:36:11.858321Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025188207626342773, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:36:11.861205Z", "completed_at": "2025-06-27T20:36:11.864071Z"}, {"name": "execute", "started_at": "2025-06-27T20:36:11.864313Z", "completed_at": "2025-06-27T20:36:11.869265Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014762163162231445, "adapter_response": {}, "message": "Runtime Error in test relationships_orders_customer_id__customer_id__ref_customers_ (models/marts/orders.yml)\n  Catalog Error: Table with name customers does not exist!\n  Did you mean \"raw_customers\"?\n  \n  LINE 22:     from \"jaffle_platform\".\"main\".\"customers\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.23160886764526367, "args": {"empty": false, "exclude": [], "indirect_selection": "eager", "strict_mode": false, "populate_cache": true, "log_level": "info", "require_resource_names_without_spaces": false, "state_modified_compare_vars": false, "send_anonymous_usage_stats": false, "exclude_resource_types": [], "vars": {}, "include_saved_query": false, "log_file_max_bytes": 10485760, "printer_width": 80, "introspect": true, "require_yaml_configuration_for_mf_time_spines": false, "partial_parse_file_diff": true, "defer": false, "source_freshness_run_project_hooks": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "skip_nodes_if_on_run_start_fails": false, "state_modified_compare_more_unrendered_values": false, "print": true, "write_json": true, "log_level_file": "debug", "quiet": false, "require_batched_execution_for_custom_microbatch_strategy": false, "macro_debugging": false, "require_nested_cumulative_type_params": false, "use_colors": true, "select": ["jaffle_platform.marts.accepted_values_orders_status__completed", "jaffle_platform.marts.not_null_orders_order_date", "jaffle_platform.marts.relationships_orders_store_id__store_id__ref_stg_stores_", "jaffle_platform.marts.dbt_utils_accepted_range_orders_total_revenue__0", "jaffle_platform.marts.relationships_orders_customer_id__customer_id__ref_customers_", "jaffle_platform.marts.not_null_orders_customer_id", "jaffle_platform.marts.not_null_orders_order_id", "jaffle_platform.marts.unique_orders_order_id", "jaffle_platform.marts.not_null_orders_store_id", "jaffle_platform.marts.dbt_utils_accepted_range_orders_total_cost__0", "jaffle_platform.marts.not_null_orders_total_revenue", "jaffle_platform.marts.not_null_orders_status", "jaffle_platform.marts.not_null_orders_total_profit", "jaffle_platform.marts.not_null_orders_total_items_count", "jaffle_platform.marts.dbt_utils_accepted_range_orders_total_items_count__1"], "version_check": true, "partial_parse": true, "invocation_command": "dbt build --select jaffle_platform.marts.accepted_values_orders_status__completed jaffle_platform.marts.not_null_orders_order_date jaffle_platform.marts.relationships_orders_store_id__store_id__ref_stg_stores_ jaffle_platform.marts.dbt_utils_accepted_range_orders_total_revenue__0 jaffle_platform.marts.relationships_orders_customer_id__customer_id__ref_customers_ jaffle_platform.marts.not_null_orders_customer_id jaffle_platform.marts.not_null_orders_order_id jaffle_platform.marts.unique_orders_order_id jaffle_platform.marts.not_null_orders_store_id jaffle_platform.marts.dbt_utils_accepted_range_orders_total_cost__0 jaffle_platform.marts.not_null_orders_total_revenue jaffle_platform.marts.not_null_orders_status jaffle_platform.marts.not_null_orders_total_profit jaffle_platform.marts.not_null_orders_total_items_count jaffle_platform.marts.dbt_utils_accepted_range_orders_total_items_count__1", "show": false, "show_resource_report": false, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-2f398cd-842d685", "log_format_file": "json", "use_colors_file": true, "target_path": "target/jaffle_platform-2f398cd-842d685", "cache_selected_only": false, "static_parser": true, "log_format": "json", "which": "build", "resource_types": [], "require_explicit_package_overrides_for_builtin_materializations": true, "favor_state": false, "export_saved_queries": false, "warn_error_options": {"include": [], "exclude": []}, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project"}}