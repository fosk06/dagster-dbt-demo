{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:33:25.279041Z", "invocation_id": "6766b9c4-0b7b-4123-89ce-9b6a2c4f2de5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.095773Z", "completed_at": "2025-06-27T20:33:25.100249Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.100653Z", "completed_at": "2025-06-27T20:33:25.132274Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03733110427856445, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_products", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_products\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        sku as product_id,\n\n        ----------  strings\n        name as product_name,\n        type as product_type,\n        description,\n\n        ----------  numerics\n        price as product_price,\n\n        ----------  booleans\n        type = 'food' as is_food_item,\n        type = 'drink' as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_products\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.135423Z", "completed_at": "2025-06-27T20:33:25.140872Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.141130Z", "completed_at": "2025-06-27T20:33:25.153268Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019181013107299805, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_stg_products_product_type__beverage__jaffle.a9aed4257e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_type as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n    group by product_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'beverage','jaffle'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.156072Z", "completed_at": "2025-06-27T20:33:25.159909Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.160130Z", "completed_at": "2025-06-27T20:33:25.163968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009160995483398438, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_stg_products_product_price__0.d7d70a9cd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_products\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.166578Z", "completed_at": "2025-06-27T20:33:25.171023Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.171280Z", "completed_at": "2025-06-27T20:33:25.175279Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01010584831237793, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_is_drink_item.339e87c30d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.177961Z", "completed_at": "2025-06-27T20:33:25.180067Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.180382Z", "completed_at": "2025-06-27T20:33:25.184340Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007597923278808594, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_is_food_item.8e5e6fcdb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.186788Z", "completed_at": "2025-06-27T20:33:25.189030Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.189245Z", "completed_at": "2025-06-27T20:33:25.193030Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00750279426574707, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_id.6373b0acf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.195435Z", "completed_at": "2025-06-27T20:33:25.197559Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.197776Z", "completed_at": "2025-06-27T20:33:25.201321Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0071010589599609375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_name.0b59e4b939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.203688Z", "completed_at": "2025-06-27T20:33:25.206615Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.206829Z", "completed_at": "2025-06-27T20:33:25.210670Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008301734924316406, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_price.d96fdc5e1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.213169Z", "completed_at": "2025-06-27T20:33:25.215465Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.215687Z", "completed_at": "2025-06-27T20:33:25.219471Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0075647830963134766, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_type.7dbdaaf4d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_type\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.222230Z", "completed_at": "2025-06-27T20:33:25.225845Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.226089Z", "completed_at": "2025-06-27T20:33:25.230137Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01964592933654785, "adapter_response": {}, "message": "Runtime Error in test relationships_stg_order_items_product_id__product_id__ref_stg_products_ (models/stg/stg_order_items.yml)\n  Catalog Error: Table with name stg_order_items does not exist!\n  Did you mean \"stg_stores\"?\n  \n  LINE 16:     from \"jaffle_platform\".\"main\".\"stg_order_items\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_stg_order_items_product_id__product_id__ref_stg_products_.886a82c26c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.243797Z", "completed_at": "2025-06-27T20:33:25.253149Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.253532Z", "completed_at": "2025-06-27T20:33:25.259866Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017548799514770508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_stg_supplies_product_id__product_id__ref_stg_products_.b24247ed0a", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_supplies\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:33:25.262622Z", "completed_at": "2025-06-27T20:33:25.267280Z"}, {"name": "execute", "started_at": "2025-06-27T20:33:25.267529Z", "completed_at": "2025-06-27T20:33:25.272590Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011374950408935547, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_products_product_id.7d950a1467", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-1 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.jaffle_platform.relationships_order_items_product_id__product_id__ref_stg_products_.32c12f5221", "compiled": false, "compiled_code": null, "relation_name": null, "batch_results": null}], "elapsed_time": 0.2593989372253418, "args": {"cache_selected_only": false, "macro_debugging": false, "show": false, "show_resource_report": false, "strict_mode": false, "write_json": true, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "log_format_file": "json", "log_format": "json", "quiet": false, "state_modified_compare_vars": false, "print": true, "send_anonymous_usage_stats": false, "include_saved_query": false, "log_level_file": "debug", "target_path": "target/jaffle_platform-fe39360-a301f21", "use_colors": true, "state_modified_compare_more_unrendered_values": false, "static_parser": true, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-fe39360-a301f21", "export_saved_queries": false, "exclude": [], "empty": false, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "favor_state": false, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "partial_parse_file_diff": true, "log_file_max_bytes": 10485760, "defer": false, "require_nested_cumulative_type_params": false, "introspect": true, "resource_types": [], "skip_nodes_if_on_run_start_fails": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level": "info", "vars": {}, "require_yaml_configuration_for_mf_time_spines": false, "indirect_selection": "eager", "invocation_command": "dbt build --select jaffle_platform.stg.stg_products", "source_freshness_run_project_hooks": false, "version_check": true, "require_batched_execution_for_custom_microbatch_strategy": false, "which": "build", "printer_width": 80, "require_resource_names_without_spaces": false, "exclude_resource_types": [], "populate_cache": true, "select": ["jaffle_platform.stg.stg_products"]}}