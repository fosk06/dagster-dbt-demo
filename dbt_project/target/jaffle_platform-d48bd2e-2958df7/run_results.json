{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:35:03.447513Z", "invocation_id": "a540fddb-06c4-4417-a33c-e3ef7e0dba90", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:01.243367Z", "completed_at": "2025-06-27T20:35:01.248154Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:01.248405Z", "completed_at": "2025-06-27T20:35:02.383603Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1410338878631592, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.order_items", "compiled": true, "compiled_code": "with order_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_order_items\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\nproducts as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_products\"\n\n),\n\nsupplies as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_supplies\"\n\n),\n\norder_supplies_summary as (\n\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n\n),\n\njoined as (\n\n    select\n        order_items.*,\n\n        orders.order_date,\n        orders.store_id,\n\n        products.product_name,\n        \n    round(1.0 * products.product_price / 100, 2)\n as product_price,\n        products.is_food_item,\n        products.is_drink_item,\n\n        \n    round(1.0 * order_supplies_summary.supply_cost / 100, 2)\n as supply_cost,\n\n        -- calculated fields\n        \n    round(1.0 * products.product_price - coalesce(order_supplies_summary.supply_cost, 0) / 100, 2)\n as gross_profit_per_item\n\n    from order_items\n\n    left join orders on order_items.order_id = orders.order_id\n\n    left join products on order_items.product_id = products.product_id\n\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"order_items\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.386921Z", "completed_at": "2025-06-27T20:35:02.392390Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.392643Z", "completed_at": "2025-06-27T20:35:02.404429Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018870115280151367, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_order_items_product_price__0.43ad7e7f39", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.407521Z", "completed_at": "2025-06-27T20:35:02.409664Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.409906Z", "completed_at": "2025-06-27T20:35:02.414303Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008199930191040039, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_order_items_supply_cost__0.840b4d2b26", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.417039Z", "completed_at": "2025-06-27T20:35:02.420951Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.421186Z", "completed_at": "2025-06-27T20:35:02.425289Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009634017944335938, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_gross_profit_per_item.48da24203b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gross_profit_per_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere gross_profit_per_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.427800Z", "completed_at": "2025-06-27T20:35:02.429960Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.430221Z", "completed_at": "2025-06-27T20:35:02.434399Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007960796356201172, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_is_drink_item.6bb8231b5a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.437188Z", "completed_at": "2025-06-27T20:35:02.439273Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.439492Z", "completed_at": "2025-06-27T20:35:02.442978Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007013082504272461, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_is_food_item.c5a4aa0725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.445282Z", "completed_at": "2025-06-27T20:35:02.447270Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.447500Z", "completed_at": "2025-06-27T20:35:02.451170Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0073091983795166016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_date.287d23d5d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.454167Z", "completed_at": "2025-06-27T20:35:02.457053Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.457267Z", "completed_at": "2025-06-27T20:35:02.460806Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007977962493896484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_id.0207cf2b74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.463352Z", "completed_at": "2025-06-27T20:35:02.465417Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.465632Z", "completed_at": "2025-06-27T20:35:02.469551Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007528066635131836, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_item_id.c6fda366bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.472124Z", "completed_at": "2025-06-27T20:35:02.474260Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.474531Z", "completed_at": "2025-06-27T20:35:02.478537Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007673978805541992, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_id.d5e49d7c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.481013Z", "completed_at": "2025-06-27T20:35:02.482841Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.483047Z", "completed_at": "2025-06-27T20:35:02.486799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007088899612426758, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_name.86cd0cf29d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.489230Z", "completed_at": "2025-06-27T20:35:02.491374Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.491601Z", "completed_at": "2025-06-27T20:35:02.496704Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008812665939331055, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_price.9e29b4995d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.499135Z", "completed_at": "2025-06-27T20:35:02.500994Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.501217Z", "completed_at": "2025-06-27T20:35:02.504752Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006846904754638672, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_store_id.dcf872af5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.507108Z", "completed_at": "2025-06-27T20:35:02.510569Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.510795Z", "completed_at": "2025-06-27T20:35:02.517333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011626958847045898, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_order_items_product_id__product_id__ref_stg_products_.32c12f5221", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.519974Z", "completed_at": "2025-06-27T20:35:02.522607Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.522838Z", "completed_at": "2025-06-27T20:35:02.530833Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012190818786621094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_order_items_store_id__store_id__ref_stg_stores_.3506d5359d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.533195Z", "completed_at": "2025-06-27T20:35:02.536661Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.537020Z", "completed_at": "2025-06-27T20:35:02.584565Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.053092002868652344, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_order_items_order_item_id.7d0a7e900a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:02.588090Z", "completed_at": "2025-06-27T20:35:02.592069Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:02.592449Z", "completed_at": "2025-06-27T20:35:03.269540Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6822190284729004, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.271853Z", "completed_at": "2025-06-27T20:35:03.275880Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.276120Z", "completed_at": "2025-06-27T20:35:03.281188Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010744094848632812, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.284007Z", "completed_at": "2025-06-27T20:35:03.287083Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.287319Z", "completed_at": "2025-06-27T20:35:03.291728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009090185165405273, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.294287Z", "completed_at": "2025-06-27T20:35:03.296191Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.296405Z", "completed_at": "2025-06-27T20:35:03.300482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007620096206665039, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.303125Z", "completed_at": "2025-06-27T20:35:03.305115Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.305347Z", "completed_at": "2025-06-27T20:35:03.309477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00774073600769043, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.312016Z", "completed_at": "2025-06-27T20:35:03.313891Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.314117Z", "completed_at": "2025-06-27T20:35:03.317689Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006877899169921875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.320057Z", "completed_at": "2025-06-27T20:35:03.321976Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.322186Z", "completed_at": "2025-06-27T20:35:03.327154Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00834202766418457, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.330018Z", "completed_at": "2025-06-27T20:35:03.331961Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.332174Z", "completed_at": "2025-06-27T20:35:03.335719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007107973098754883, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.338294Z", "completed_at": "2025-06-27T20:35:03.340172Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.340387Z", "completed_at": "2025-06-27T20:35:03.344295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007437944412231445, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.347039Z", "completed_at": "2025-06-27T20:35:03.349462Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.349748Z", "completed_at": "2025-06-27T20:35:03.354698Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008946895599365234, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.357353Z", "completed_at": "2025-06-27T20:35:03.359353Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.359549Z", "completed_at": "2025-06-27T20:35:03.364630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008529186248779297, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.367218Z", "completed_at": "2025-06-27T20:35:03.369517Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.369840Z", "completed_at": "2025-06-27T20:35:03.374226Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008301973342895508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.376755Z", "completed_at": "2025-06-27T20:35:03.379093Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.379489Z", "completed_at": "2025-06-27T20:35:03.385663Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010272026062011719, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.388560Z", "completed_at": "2025-06-27T20:35:03.391269Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.391503Z", "completed_at": "2025-06-27T20:35:03.398753Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011584997177124023, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.401614Z", "completed_at": "2025-06-27T20:35:03.403847Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.404066Z", "completed_at": "2025-06-27T20:35:03.424077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023919105529785156, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:35:03.427068Z", "completed_at": "2025-06-27T20:35:03.430404Z"}, {"name": "execute", "started_at": "2025-06-27T20:35:03.430642Z", "completed_at": "2025-06-27T20:35:03.435835Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016462087631225586, "adapter_response": {}, "message": "Runtime Error in test relationships_orders_customer_id__customer_id__ref_customers_ (models/marts/orders.yml)\n  Catalog Error: Table with name customers does not exist!\n  Did you mean \"raw_customers\"?\n  \n  LINE 22:     from \"jaffle_platform\".\"main\".\"customers\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 2.3309969902038574, "args": {"log_format_file": "json", "partial_parse": true, "print": true, "exclude_resource_types": [], "show": false, "log_level": "info", "show_resource_report": false, "printer_width": 80, "indirect_selection": "eager", "partial_parse_file_diff": true, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "log_format": "json", "skip_nodes_if_on_run_start_fails": false, "populate_cache": true, "send_anonymous_usage_stats": false, "select": ["jaffle_platform.marts.orders", "jaffle_platform.marts.order_items"], "include_saved_query": false, "introspect": true, "target_path": "target/jaffle_platform-d48bd2e-2958df7", "use_colors_file": true, "state_modified_compare_more_unrendered_values": false, "require_yaml_configuration_for_mf_time_spines": false, "require_explicit_package_overrides_for_builtin_materializations": true, "cache_selected_only": false, "export_saved_queries": false, "resource_types": [], "require_nested_cumulative_type_params": false, "write_json": true, "which": "build", "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-d48bd2e-2958df7", "exclude": [], "version_check": true, "defer": false, "quiet": false, "use_colors": true, "vars": {}, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "source_freshness_run_project_hooks": false, "strict_mode": false, "favor_state": false, "require_batched_execution_for_custom_microbatch_strategy": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "require_resource_names_without_spaces": false, "state_modified_compare_vars": false, "macro_debugging": false, "invocation_command": "dbt build --select jaffle_platform.marts.orders jaffle_platform.marts.order_items", "log_level_file": "debug", "log_file_max_bytes": 10485760, "empty": false}}