{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-27T20:38:59.249409Z", "invocation_id": "3d17472d-12be-4e33-9f02-b1875cf6ce5e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:58.371139Z", "completed_at": "2025-06-27T20:38:58.375909Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:58.376147Z", "completed_at": "2025-06-27T20:38:59.059070Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6886849403381348, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.062234Z", "completed_at": "2025-06-27T20:38:59.067379Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.067643Z", "completed_at": "2025-06-27T20:38:59.079829Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01887202262878418, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.082395Z", "completed_at": "2025-06-27T20:38:59.086120Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.086429Z", "completed_at": "2025-06-27T20:38:59.090517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009428024291992188, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.092886Z", "completed_at": "2025-06-27T20:38:59.095863Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.096164Z", "completed_at": "2025-06-27T20:38:59.100514Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00889897346496582, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.103033Z", "completed_at": "2025-06-27T20:38:59.105226Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.105457Z", "completed_at": "2025-06-27T20:38:59.109843Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008072853088378906, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.112216Z", "completed_at": "2025-06-27T20:38:59.115435Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.115673Z", "completed_at": "2025-06-27T20:38:59.119687Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008682012557983398, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.121998Z", "completed_at": "2025-06-27T20:38:59.124171Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.124439Z", "completed_at": "2025-06-27T20:38:59.128204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007441997528076172, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.130513Z", "completed_at": "2025-06-27T20:38:59.133599Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.133828Z", "completed_at": "2025-06-27T20:38:59.138056Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0089111328125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.140522Z", "completed_at": "2025-06-27T20:38:59.142918Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.143224Z", "completed_at": "2025-06-27T20:38:59.147630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008363008499145508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.150334Z", "completed_at": "2025-06-27T20:38:59.152550Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.152792Z", "completed_at": "2025-06-27T20:38:59.156553Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007524251937866211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.159013Z", "completed_at": "2025-06-27T20:38:59.161256Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.161482Z", "completed_at": "2025-06-27T20:38:59.165327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077588558197021484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.167895Z", "completed_at": "2025-06-27T20:38:59.171375Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.171590Z", "completed_at": "2025-06-27T20:38:59.175424Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008877038955688477, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.177983Z", "completed_at": "2025-06-27T20:38:59.180259Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.180500Z", "completed_at": "2025-06-27T20:38:59.184268Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007628917694091797, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.186908Z", "completed_at": "2025-06-27T20:38:59.190921Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.191162Z", "completed_at": "2025-06-27T20:38:59.198554Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012935161590576172, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.201077Z", "completed_at": "2025-06-27T20:38:59.203966Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.204176Z", "completed_at": "2025-06-27T20:38:59.227194Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027436017990112305, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-06-27T20:38:59.230279Z", "completed_at": "2025-06-27T20:38:59.234050Z"}, {"name": "execute", "started_at": "2025-06-27T20:38:59.234293Z", "completed_at": "2025-06-27T20:38:59.238079Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015095949172973633, "adapter_response": {}, "message": "Runtime Error in test relationships_orders_customer_id__customer_id__ref_customers_ (models/marts/orders.yml)\n  Catalog Error: Table with name customers does not exist!\n  Did you mean \"raw_customers\"?\n  \n  LINE 22:     from \"jaffle_platform\".\"main\".\"customers\"\n                    ^", "failures": null, "unique_id": "test.jaffle_platform.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.9358000755310059, "args": {"source_freshness_run_project_hooks": false, "introspect": true, "log_level_file": "debug", "print": true, "show_resource_report": false, "strict_mode": false, "skip_nodes_if_on_run_start_fails": false, "empty": false, "send_anonymous_usage_stats": false, "vars": {}, "require_explicit_package_overrides_for_builtin_materializations": true, "cache_selected_only": false, "export_saved_queries": false, "log_format": "json", "state_modified_compare_more_unrendered_values": false, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "state_modified_compare_vars": false, "which": "build", "include_saved_query": false, "write_json": true, "printer_width": 80, "use_colors_file": true, "log_level": "info", "partial_parse": true, "partial_parse_file_diff": true, "log_format_file": "json", "resource_types": [], "log_file_max_bytes": 10485760, "invocation_command": "dbt build --select jaffle_platform.marts.orders", "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "quiet": false, "show": false, "select": ["jaffle_platform.marts.orders"], "macro_debugging": false, "require_yaml_configuration_for_mf_time_spines": false, "use_colors": true, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project/target/jaffle_platform-aa66ca6-78f5264", "version_check": true, "target_path": "target/jaffle_platform-aa66ca6-78f5264", "indirect_selection": "eager", "exclude": [], "require_batched_execution_for_custom_microbatch_strategy": false, "require_nested_cumulative_type_params": false, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt_project", "static_parser": true, "exclude_resource_types": [], "require_resource_names_without_spaces": false, "favor_state": false, "defer": false}}