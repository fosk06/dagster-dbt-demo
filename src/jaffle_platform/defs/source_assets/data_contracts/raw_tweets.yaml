dataContractSpecification: 1.1.0
id: jaffle-main-raw_tweets
info:
  title: Jaffle Raw Tweets Data Contract
  version: 0.0.1
  description: Data contract for raw_tweets
  owner: Jaffle
  contact:
    name: Jaffle
    url: https://jaffle.com
    email: jaffle@jaffle.com

### servers

servers:
  local:
    type: local
    path: jaffle-data/raw_tweets.csv
    format: csv

### terms

terms:
  usage: Jaffle
  limitations: Jaffle
  billing: Jaffle
  noticePeriod: Jaffle

### models

models:
  raw_tweets:
    description: Raw tweets data
    fields:
      id:
        type: string
        description: Unique tweet identifier
      user_id:
        type: string
        description: User identifier
      tweeted_at:
        type: string # ISO datetime string
        description: Timestamp of the tweet
      content:
        type: string
        description: Tweet content
### definitions

# definitions:
#   my_field:
#     domain:
#     name:
#     title:
#     type:
#     description:
#     example:
#     pii:
#     classification:

### servicelevels

#servicelevels:
#  availability:
#    description: The server is available during support hours
#    percentage: 99.9%
#  retention:
#    description: Data is retained for one year because!
#    period: P1Y
#    unlimited: false
#  latency:
#    description: Data is available within 25 hours after the order was placed
#    threshold: 25h
#    sourceTimestampField: orders.order_timestamp
#    processedTimestampField: orders.processed_timestamp
#  freshness:
#    description: The age of the youngest row in a table.
#    threshold: 25h
#    timestampField: orders.order_timestamp
#  frequency:
#    description: Data is delivered once a day
#    type: batch # or streaming
#    interval: daily # for batch, either or cron
#    cron: 0 0 * * * # for batch, either or interval
#  support:
#    description: The data is available during typical business hours at headquarters
#    time: 9am to 5pm in EST on business days
#    responseTime: 1h
#  backup:
#    description: Data is backed up once a week, every Sunday at 0:00 UTC.
#    interval: weekly
#    cron: 0 0 * * 0
#    recoveryTime: 24 hours
#    recoveryPoint: 1 week
