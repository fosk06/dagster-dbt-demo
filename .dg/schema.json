{
  "$defs": {
    "AssetCheckSpecKwargsModel": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "asset": {
          "description": "A unique identifier for the asset.",
          "title": "Asset",
          "type": "string"
        },
        "additional_deps": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Additional Deps"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "blocking": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": false,
          "title": "Blocking"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Automation Condition"
        }
      },
      "required": [
        "name",
        "asset"
      ],
      "title": "AssetCheckSpecKwargsModel",
      "type": "object"
    },
    "AssetPostProcessorModelModel": {
      "additionalProperties": false,
      "properties": {
        "target": {
          "default": "*",
          "title": "Target",
          "type": "string"
        },
        "operation": {
          "anyOf": [
            {
              "enum": [
                "merge",
                "replace"
              ],
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "default": "merge",
          "title": "Operation"
        },
        "attributes": {
          "anyOf": [
            {
              "$ref": "#/$defs/AssetsDefUpdateKwargsModel"
            },
            {
              "type": "string"
            }
          ],
          "title": "Attributes"
        }
      },
      "required": [
        "attributes"
      ],
      "title": "AssetPostProcessorModelModel",
      "type": "object"
    },
    "AssetSpecKwargsModel": {
      "additionalProperties": false,
      "properties": {
        "deps": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The asset keys for the upstream assets that this asset depends on.",
          "examples": [
            [
              "my_database/my_schema/upstream_table"
            ]
          ],
          "title": "Deps"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable description of the asset.",
          "examples": [
            "Refined sales data"
          ],
          "title": "Description"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Additional metadata for the asset.",
          "title": "Metadata"
        },
        "group_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Used to organize assets into groups, defaults to 'default'.",
          "examples": [
            "staging"
          ],
          "title": "Group Name"
        },
        "skippable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "Whether this asset can be omitted during materialization, causing downstream dependencies to skip.",
          "title": "Skippable"
        },
        "code_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version representing the code that produced the asset. Increment this value when the code changes.",
          "examples": [
            "3"
          ],
          "title": "Code Version"
        },
        "owners": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.",
          "examples": [
            [
              "team:analytics",
              "nelson@hooli.com"
            ]
          ],
          "title": "Owners"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Tags for filtering and organizing.",
          "examples": [
            {
              "team": "analytics",
              "tier": "prod"
            }
          ],
          "title": "Tags"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.",
          "examples": [
            [
              "snowflake"
            ]
          ],
          "title": "Kinds"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The condition under which the asset will be automatically materialized.",
          "title": "Automation Condition"
        },
        "partitions_def": {
          "anyOf": [
            {
              "$ref": "#/$defs/HourlyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/DailyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/WeeklyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/TimeWindowPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/StaticPartitionsDefinitionModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "The partitions definition for the asset.",
          "title": "Partitions Def"
        },
        "key": {
          "description": "A unique identifier for the asset.",
          "title": "Key",
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "AssetSpecKwargsModel",
      "type": "object"
    },
    "AssetSpecUpdateKwargsModel": {
      "additionalProperties": false,
      "properties": {
        "deps": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The asset keys for the upstream assets that this asset depends on.",
          "examples": [
            [
              "my_database/my_schema/upstream_table"
            ]
          ],
          "title": "Deps"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable description of the asset.",
          "examples": [
            "Refined sales data"
          ],
          "title": "Description"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Additional metadata for the asset.",
          "title": "Metadata"
        },
        "group_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Used to organize assets into groups, defaults to 'default'.",
          "examples": [
            "staging"
          ],
          "title": "Group Name"
        },
        "skippable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "Whether this asset can be omitted during materialization, causing downstream dependencies to skip.",
          "title": "Skippable"
        },
        "code_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version representing the code that produced the asset. Increment this value when the code changes.",
          "examples": [
            "3"
          ],
          "title": "Code Version"
        },
        "owners": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.",
          "examples": [
            [
              "team:analytics",
              "nelson@hooli.com"
            ]
          ],
          "title": "Owners"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Tags for filtering and organizing.",
          "examples": [
            {
              "team": "analytics",
              "tier": "prod"
            }
          ],
          "title": "Tags"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.",
          "examples": [
            [
              "snowflake"
            ]
          ],
          "title": "Kinds"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The condition under which the asset will be automatically materialized.",
          "title": "Automation Condition"
        },
        "partitions_def": {
          "anyOf": [
            {
              "$ref": "#/$defs/HourlyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/DailyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/WeeklyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/TimeWindowPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/StaticPartitionsDefinitionModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "The partitions definition for the asset.",
          "title": "Partitions Def"
        },
        "key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Key"
        },
        "key_prefix": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Prefix the existing asset key with the provided value.",
          "title": "Key Prefix"
        }
      },
      "title": "AssetSpecUpdateKwargsModel",
      "type": "object"
    },
    "AssetsDefUpdateKwargsModel": {
      "additionalProperties": false,
      "properties": {
        "deps": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The asset keys for the upstream assets that this asset depends on.",
          "examples": [
            [
              "my_database/my_schema/upstream_table"
            ]
          ],
          "title": "Deps"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable description of the asset.",
          "examples": [
            "Refined sales data"
          ],
          "title": "Description"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Additional metadata for the asset.",
          "title": "Metadata"
        },
        "group_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Used to organize assets into groups, defaults to 'default'.",
          "examples": [
            "staging"
          ],
          "title": "Group Name"
        },
        "skippable": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "Whether this asset can be omitted during materialization, causing downstream dependencies to skip.",
          "title": "Skippable"
        },
        "code_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version representing the code that produced the asset. Increment this value when the code changes.",
          "examples": [
            "3"
          ],
          "title": "Code Version"
        },
        "owners": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.",
          "examples": [
            [
              "team:analytics",
              "nelson@hooli.com"
            ]
          ],
          "title": "Owners"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "Tags for filtering and organizing.",
          "examples": [
            {
              "team": "analytics",
              "tier": "prod"
            }
          ],
          "title": "Tags"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "description": "A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.",
          "examples": [
            [
              "snowflake"
            ]
          ],
          "title": "Kinds"
        },
        "automation_condition": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The condition under which the asset will be automatically materialized.",
          "title": "Automation Condition"
        },
        "partitions_def": {
          "anyOf": [
            {
              "$ref": "#/$defs/HourlyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/DailyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/WeeklyPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/TimeWindowPartitionsDefinitionModel"
            },
            {
              "$ref": "#/$defs/StaticPartitionsDefinitionModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "description": "The partitions definition for the asset.",
          "title": "Partitions Def"
        }
      },
      "title": "AssetsDefUpdateKwargsModel",
      "type": "object"
    },
    "ComponentRequirementsModel": {
      "description": "Describes dependencies for a component to load.",
      "properties": {
        "env": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Env"
        }
      },
      "title": "ComponentRequirementsModel",
      "type": "object"
    },
    "DagsterDbtComponentsTranslatorSettingsModel": {
      "additionalProperties": false,
      "properties": {
        "enable_asset_checks": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": true,
          "title": "Enable Asset Checks"
        },
        "enable_duplicate_source_asset_keys": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": false,
          "title": "Enable Duplicate Source Asset Keys"
        },
        "enable_code_references": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": true,
          "title": "Enable Code References"
        },
        "enable_dbt_selection_by_name": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": false,
          "title": "Enable Dbt Selection By Name"
        },
        "enable_source_tests_as_checks": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": false,
          "title": "Enable Source Tests As Checks"
        }
      },
      "title": "DagsterDbtComponentsTranslatorSettingsModel",
      "type": "object"
    },
    "DailyPartitionsDefinitionModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "daily",
          "default": "daily",
          "title": "Type",
          "type": "string"
        },
        "start_date": {
          "title": "Start Date",
          "type": "string"
        },
        "end_date": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Date"
        },
        "timezone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timezone"
        },
        "minute_offset": {
          "default": 0,
          "title": "Minute Offset",
          "type": "integer"
        },
        "hour_offset": {
          "default": 0,
          "title": "Hour Offset",
          "type": "integer"
        }
      },
      "required": [
        "start_date"
      ],
      "title": "DailyPartitionsDefinitionModel",
      "type": "object"
    },
    "DbtProjectArgsModel": {
      "additionalProperties": false,
      "properties": {
        "project_dir": {
          "title": "Project Dir",
          "type": "string"
        },
        "target_path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Target Path"
        },
        "profiles_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Profiles Dir"
        },
        "profile": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Profile"
        },
        "target": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Target"
        },
        "packaged_project_dir": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Packaged Project Dir"
        },
        "state_path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "State Path"
        }
      },
      "required": [
        "project_dir"
      ],
      "title": "DbtProjectArgsModel",
      "type": "object"
    },
    "DbtProjectComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_dbt.DbtProjectComponent",
          "default": "dagster_dbt.DbtProjectComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/DbtProjectComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "DbtProjectComponent",
      "type": "object"
    },
    "DbtProjectComponentModel": {
      "additionalProperties": false,
      "properties": {
        "project": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/DbtProjectArgsModel"
            }
          ],
          "title": "Project"
        },
        "op": {
          "anyOf": [
            {
              "$ref": "#/$defs/OpSpecModel"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Op"
        },
        "translation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/AssetSpecUpdateKwargsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Translation"
        },
        "select": {
          "default": "fqn:*",
          "title": "Select",
          "type": "string"
        },
        "exclude": {
          "default": "",
          "title": "Exclude",
          "type": "string"
        },
        "translation_settings": {
          "anyOf": [
            {
              "$ref": "#/$defs/DagsterDbtComponentsTranslatorSettingsModel"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Translation Settings"
        },
        "prepare_if_dev": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string"
            }
          ],
          "default": true,
          "title": "Prepare If Dev"
        }
      },
      "required": [
        "project"
      ],
      "title": "DbtProjectComponentModel",
      "type": "object"
    },
    "DefinitionsComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster.DefinitionsComponent",
          "default": "dagster.DefinitionsComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/DefinitionsComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "DefinitionsComponent",
      "type": "object"
    },
    "DefinitionsComponentModel": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Path"
        }
      },
      "required": [
        "path"
      ],
      "title": "DefinitionsComponentModel",
      "type": "object"
    },
    "DefsFolderComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster.DefsFolderComponent",
          "default": "dagster.DefsFolderComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/DefsFolderComponentYamlSchemaModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "DefsFolderComponent",
      "type": "object"
    },
    "DefsFolderComponentYamlSchemaModel": {
      "additionalProperties": false,
      "properties": {},
      "title": "DefsFolderComponentYamlSchemaModel",
      "type": "object"
    },
    "DltLoadCollectionComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_dlt.DltLoadCollectionComponent",
          "default": "dagster_dlt.DltLoadCollectionComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/DltLoadCollectionComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "DltLoadCollectionComponent",
      "type": "object"
    },
    "DltLoadCollectionComponentModel": {
      "additionalProperties": false,
      "properties": {
        "loads": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/DltLoadSpecModelModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "title": "Loads"
        }
      },
      "required": [
        "loads"
      ],
      "title": "DltLoadCollectionComponentModel",
      "type": "object"
    },
    "DltLoadSpecModelModel": {
      "additionalProperties": false,
      "properties": {
        "pipeline": {
          "title": "Pipeline",
          "type": "string"
        },
        "source": {
          "title": "Source",
          "type": "string"
        },
        "translation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/AssetSpecUpdateKwargsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Translation"
        }
      },
      "required": [
        "pipeline",
        "source"
      ],
      "title": "DltLoadSpecModelModel",
      "type": "object"
    },
    "EvidenceProject": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_evidence.EvidenceProject",
          "default": "dagster_evidence.EvidenceProject",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/EvidenceProjectModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "EvidenceProject",
      "type": "object"
    },
    "EvidenceProjectModel": {
      "additionalProperties": false,
      "properties": {
        "project_path": {
          "title": "Project Path",
          "type": "string"
        },
        "asset": {
          "anyOf": [
            {
              "$ref": "#/$defs/AssetSpecKwargsModel"
            },
            {
              "type": "string"
            }
          ],
          "title": "Asset"
        },
        "asset_post_processors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetPostProcessorModelModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Asset Post Processors"
        },
        "deploy_command": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Deploy Command"
        },
        "npm_executable": {
          "default": "npm",
          "title": "Npm Executable",
          "type": "string"
        }
      },
      "required": [
        "project_path",
        "asset"
      ],
      "title": "EvidenceProjectModel",
      "type": "object"
    },
    "FunctionComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster.FunctionComponent",
          "default": "dagster.FunctionComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/FunctionComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "FunctionComponent",
      "type": "object"
    },
    "FunctionComponentModel": {
      "additionalProperties": false,
      "properties": {
        "assets": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Assets"
        },
        "checks": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetCheckSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checks"
        },
        "execution": {
          "anyOf": [
            {
              "$ref": "#/$defs/FunctionSpecModel"
            },
            {
              "type": "string"
            }
          ],
          "title": "Execution"
        }
      },
      "required": [
        "execution"
      ],
      "title": "FunctionComponentModel",
      "type": "object"
    },
    "FunctionSpecModel": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pool"
        },
        "backfill_policy": {
          "anyOf": [
            {
              "$ref": "#/$defs/SingleRunBackfillPolicyModel"
            },
            {
              "$ref": "#/$defs/MultiRunBackfillPolicyModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "title": "Backfill Policy"
        },
        "type": {
          "anyOf": [
            {
              "const": "function",
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "default": "function",
          "title": "Type"
        },
        "fn": {
          "title": "Fn",
          "type": "string"
        }
      },
      "required": [
        "fn"
      ],
      "title": "FunctionSpecModel",
      "type": "object"
    },
    "HourlyPartitionsDefinitionModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "hourly",
          "default": "hourly",
          "title": "Type",
          "type": "string"
        },
        "start_date": {
          "title": "Start Date",
          "type": "string"
        },
        "end_date": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Date"
        },
        "timezone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timezone"
        },
        "minute_offset": {
          "default": 0,
          "title": "Minute Offset",
          "type": "integer"
        }
      },
      "required": [
        "start_date"
      ],
      "title": "HourlyPartitionsDefinitionModel",
      "type": "object"
    },
    "MultiRunBackfillPolicyModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "multi_run",
          "default": "multi_run",
          "title": "Type",
          "type": "string"
        },
        "max_partitions_per_run": {
          "default": 1,
          "title": "Max Partitions Per Run",
          "type": "integer"
        }
      },
      "title": "MultiRunBackfillPolicyModel",
      "type": "object"
    },
    "OpSpecModel": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pool"
        },
        "backfill_policy": {
          "anyOf": [
            {
              "$ref": "#/$defs/SingleRunBackfillPolicyModel"
            },
            {
              "$ref": "#/$defs/MultiRunBackfillPolicyModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "title": "Backfill Policy"
        }
      },
      "title": "OpSpecModel",
      "type": "object"
    },
    "PythonScriptComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster.PythonScriptComponent",
          "default": "dagster.PythonScriptComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/PythonScriptComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "PythonScriptComponent",
      "type": "object"
    },
    "PythonScriptComponentModel": {
      "additionalProperties": false,
      "properties": {
        "assets": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Assets"
        },
        "checks": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetCheckSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checks"
        },
        "execution": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScriptSpecModel"
            },
            {
              "type": "string"
            }
          ],
          "title": "Execution"
        }
      },
      "required": [
        "execution"
      ],
      "title": "PythonScriptComponentModel",
      "type": "object"
    },
    "ScriptSpecModel": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "tags": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "pool": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Pool"
        },
        "backfill_policy": {
          "anyOf": [
            {
              "$ref": "#/$defs/SingleRunBackfillPolicyModel"
            },
            {
              "$ref": "#/$defs/MultiRunBackfillPolicyModel"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "title": "Backfill Policy"
        },
        "type": {
          "anyOf": [
            {
              "const": "script",
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "default": "script",
          "title": "Type"
        },
        "path": {
          "title": "Path",
          "type": "string"
        },
        "args": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Args"
        }
      },
      "required": [
        "path"
      ],
      "title": "ScriptSpecModel",
      "type": "object"
    },
    "SingleRunBackfillPolicyModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "single_run",
          "default": "single_run",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "SingleRunBackfillPolicyModel",
      "type": "object"
    },
    "SlingConnectionResource": {
      "additionalProperties": true,
      "description": "A representation of a connection to a database or file to be used by Sling. This resource can be used as a source or a target for a Sling syncs.\n\nReference the Sling docs for more information on possible connection types and parameters: https://docs.slingdata.io/connections\n\nThe name of the connection is passed to Sling and must match the name of the connection provided in the replication configuration: https://docs.slingdata.io/sling-cli/run/configuration/replication\nYou may provide either a connection string or keyword arguments for the connection.\n\nExamples:\n    Creating a Sling Connection for a file, such as CSV or JSON:\n\n    .. code-block:: python\n\n         source = SlingConnectionResource(name=\"MY_FILE\", type=\"file\")\n\n    Create a Sling Connection for a Postgres database, using a connection string:\n\n    .. code-block:: python\n\n        postgres_conn = SlingConnectionResource(name=\"MY_POSTGRES\", type=\"postgres\", connection_string=EnvVar(\"POSTGRES_CONNECTION_STRING\"))\n        mysql_conn = SlingConnectionResource(name=\"MY_MYSQL\", type=\"mysql\", connection_string=\"mysql://user:password@host:port/schema\")\n\n    Create a Sling Connection for a Postgres or Snowflake database, using keyword arguments:\n\n    .. code-block::python\n\n        postgres_conn = SlingConnectionResource(\n            name=\"MY_OTHER_POSRGRES\",\n            type=\"postgres\",\n            host=\"host\",\n            user=\"hunter42\",\n            password=EnvVar(\"POSTGRES_PASSWORD\")\n        )\n\n        snowflake_conn = SlingConnectionResource(\n            name=\"MY_SNOWFLAKE\",\n            type=\"snowflake\",\n            host=EnvVar(\"SNOWFLAKE_HOST\"),\n            user=EnvVar(\"SNOWFLAKE_USER\"),\n            database=EnvVar(\"SNOWFLAKE_DATABASE\"),\n            password=EnvVar(\"SNOWFLAKE_PASSWORD\"),\n            role=EnvVar(\"SNOWFLAKE_ROLE\")\n        )",
      "properties": {
        "name": {
          "description": "The name of the connection, must match the name in your Sling replication configuration.",
          "title": "Name",
          "type": "string"
        },
        "type": {
          "description": "Type of the source connection, must match the Sling connection types. Use 'file' for local storage.",
          "title": "Type",
          "type": "string"
        },
        "connection_string": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional connection string for the source database, if not using keyword arguments.",
          "title": "Connection String"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "SlingConnectionResource",
      "type": "object"
    },
    "SlingConnectionResourcePropertiesModel": {
      "additionalProperties": true,
      "description": "Properties of a Sling connection resource.",
      "properties": {
        "type": {
          "description": "Type of the source connection, must match the Sling connection types. Use 'file' for local storage.",
          "title": "Type",
          "type": "string"
        },
        "connection_string": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional connection string for the source database, if not using keyword arguments.",
          "title": "Connection String"
        }
      },
      "required": [
        "type"
      ],
      "title": "SlingConnectionResourcePropertiesModel",
      "type": "object"
    },
    "SlingReplicationCollectionComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster_sling.SlingReplicationCollectionComponent",
          "default": "dagster_sling.SlingReplicationCollectionComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/SlingReplicationCollectionComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "SlingReplicationCollectionComponent",
      "type": "object"
    },
    "SlingReplicationCollectionComponentModel": {
      "additionalProperties": false,
      "properties": {
        "connections": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/SlingConnectionResourcePropertiesModel"
              },
              "type": "object"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "title": "Connections"
        },
        "replications": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/SlingReplicationSpecModelModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "title": "Replications"
        },
        "asset_post_processors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetPostProcessorModelModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Asset Post Processors"
        },
        "sling": {
          "anyOf": [
            {
              "$ref": "#/$defs/SlingResource"
            },
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ],
          "default": null,
          "title": "Sling"
        }
      },
      "title": "SlingReplicationCollectionComponentModel",
      "type": "object"
    },
    "SlingReplicationSpecModelModel": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "title": "Path",
          "type": "string"
        },
        "op": {
          "anyOf": [
            {
              "$ref": "#/$defs/OpSpecModel"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Op"
        },
        "translation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/AssetSpecUpdateKwargsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Translation"
        },
        "include_metadata": {
          "anyOf": [
            {
              "items": {
                "enum": [
                  "column_metadata",
                  "row_count"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "string"
            }
          ],
          "default": "__DAGSTER_UNSET_DEFAULT__",
          "title": "Include Metadata"
        }
      },
      "required": [
        "path"
      ],
      "title": "SlingReplicationSpecModelModel",
      "type": "object"
    },
    "SlingResource": {
      "description": "Resource for interacting with the Sling package. This resource can be used to run Sling replications.\n\nArgs:\n    connections (List[SlingConnectionResource]): A list of connections to use for the replication.\n\nExamples:\n    .. code-block:: python\n\n        from dagster_etl.sling import SlingResource, SlingConnectionResource\n\n        sling_resource = SlingResource(\n            connections=[\n                SlingConnectionResource(\n                    name=\"MY_POSTGRES\",\n                    type=\"postgres\",\n                    connection_string=EnvVar(\"POSTGRES_CONNECTION_STRING\"),\n                ),\n                SlingConnectionResource(\n                    name=\"MY_SNOWFLAKE\",\n                    type=\"snowflake\",\n                    host=EnvVar(\"SNOWFLAKE_HOST\"),\n                    user=EnvVar(\"SNOWFLAKE_USER\"),\n                    database=EnvVar(\"SNOWFLAKE_DATABASE\"),\n                    password=EnvVar(\"SNOWFLAKE_PASSWORD\"),\n                    role=EnvVar(\"SNOWFLAKE_ROLE\"),\n                ),\n            ]\n        )",
      "properties": {
        "connections": {
          "default": [],
          "items": {
            "$ref": "#/$defs/SlingConnectionResource"
          },
          "title": "Connections",
          "type": "array"
        }
      },
      "title": "SlingResource",
      "type": "object"
    },
    "StaticPartitionsDefinitionModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "static",
          "default": "static",
          "title": "Type",
          "type": "string"
        },
        "partition_keys": {
          "items": {
            "type": "string"
          },
          "title": "Partition Keys",
          "type": "array"
        }
      },
      "required": [
        "partition_keys"
      ],
      "title": "StaticPartitionsDefinitionModel",
      "type": "object"
    },
    "TimeWindowPartitionsDefinitionModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "time_window",
          "default": "time_window",
          "title": "Type",
          "type": "string"
        },
        "start_date": {
          "title": "Start Date",
          "type": "string"
        },
        "end_date": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Date"
        },
        "timezone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timezone"
        },
        "fmt": {
          "title": "Fmt",
          "type": "string"
        },
        "cron_schedule": {
          "title": "Cron Schedule",
          "type": "string"
        }
      },
      "required": [
        "start_date",
        "fmt",
        "cron_schedule"
      ],
      "title": "TimeWindowPartitionsDefinitionModel",
      "type": "object"
    },
    "UvRunComponent": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "dagster.UvRunComponent",
          "default": "dagster.UvRunComponent",
          "title": "Type",
          "type": "string"
        },
        "attributes": {
          "$ref": "#/$defs/UvRunComponentModel",
          "default": null
        },
        "requirements": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentRequirementsModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "UvRunComponent",
      "type": "object"
    },
    "UvRunComponentModel": {
      "additionalProperties": false,
      "properties": {
        "assets": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Assets"
        },
        "checks": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AssetCheckSpecKwargsModel"
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Checks"
        },
        "execution": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScriptSpecModel"
            },
            {
              "type": "string"
            }
          ],
          "title": "Execution"
        }
      },
      "required": [
        "execution"
      ],
      "title": "UvRunComponentModel",
      "type": "object"
    },
    "WeeklyPartitionsDefinitionModel": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "weekly",
          "default": "weekly",
          "title": "Type",
          "type": "string"
        },
        "start_date": {
          "title": "Start Date",
          "type": "string"
        },
        "end_date": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Date"
        },
        "timezone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Timezone"
        },
        "minute_offset": {
          "default": 0,
          "title": "Minute Offset",
          "type": "integer"
        },
        "hour_offset": {
          "default": 0,
          "title": "Hour Offset",
          "type": "integer"
        },
        "day_offset": {
          "default": 0,
          "title": "Day Offset",
          "type": "integer"
        }
      },
      "required": [
        "start_date"
      ],
      "title": "WeeklyPartitionsDefinitionModel",
      "type": "object"
    }
  },
  "anyOf": [
    {
      "$ref": "#/$defs/DefinitionsComponent"
    },
    {
      "$ref": "#/$defs/DefsFolderComponent"
    },
    {
      "$ref": "#/$defs/FunctionComponent"
    },
    {
      "$ref": "#/$defs/PythonScriptComponent"
    },
    {
      "$ref": "#/$defs/UvRunComponent"
    },
    {
      "$ref": "#/$defs/DbtProjectComponent"
    },
    {
      "$ref": "#/$defs/DltLoadCollectionComponent"
    },
    {
      "$ref": "#/$defs/EvidenceProject"
    },
    {
      "$ref": "#/$defs/SlingReplicationCollectionComponent"
    }
  ]
}