{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-19T22:15:27.479666Z", "invocation_id": "6ac0c0fb-e5bb-466f-932c-e8176052fd04", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.842443Z", "completed_at": "2025-06-19T22:15:24.850022Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.850198Z", "completed_at": "2025-06-19T22:15:24.863520Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022170066833496094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_customers_id.fd630b40ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.865535Z", "completed_at": "2025-06-19T22:15:24.867612Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.867770Z", "completed_at": "2025-06-19T22:15:24.870925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006326198577880859, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_items_id.ba04a3f168", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.872726Z", "completed_at": "2025-06-19T22:15:24.874682Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.874844Z", "completed_at": "2025-06-19T22:15:24.877796Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060880184173583984, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_orders_id.8d0b417515", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.879575Z", "completed_at": "2025-06-19T22:15:24.881890Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.882059Z", "completed_at": "2025-06-19T22:15:24.885253Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065729618072509766, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_products_sku.9ea5f86121", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sku\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.886947Z", "completed_at": "2025-06-19T22:15:24.890085Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.890251Z", "completed_at": "2025-06-19T22:15:24.893141Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00707697868347168, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_stores_id.bf84e62e4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.894834Z", "completed_at": "2025-06-19T22:15:24.897018Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.897193Z", "completed_at": "2025-06-19T22:15:24.900183Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0062220096588134766, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_supplies_id.fe2c38d6d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_supplies\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.901966Z", "completed_at": "2025-06-19T22:15:24.905052Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.905221Z", "completed_at": "2025-06-19T22:15:24.912958Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012128114700317383, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_customers_id.42581a7c1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.914995Z", "completed_at": "2025-06-19T22:15:24.917296Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.917455Z", "completed_at": "2025-06-19T22:15:24.953561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.039688825607299805, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_items_id.9fb85e5588", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.955962Z", "completed_at": "2025-06-19T22:15:24.959499Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.959675Z", "completed_at": "2025-06-19T22:15:24.983171Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.028243064880371094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_orders_id.fd49aea3d7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.985081Z", "completed_at": "2025-06-19T22:15:24.987459Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.987624Z", "completed_at": "2025-06-19T22:15:24.991551Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007508993148803711, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_products_sku.7677d51e94", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sku as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is not null\ngroup by sku\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:24.993479Z", "completed_at": "2025-06-19T22:15:24.995311Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:24.995472Z", "completed_at": "2025-06-19T22:15:24.999329Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0068280696868896484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_stores_id.067b11d4e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.001450Z", "completed_at": "2025-06-19T22:15:25.002963Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.003104Z", "completed_at": "2025-06-19T22:15:25.034594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033715009689331055, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_supplies", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_supplies\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as supply_id,\n        sku as product_id,\n\n        ----------  strings\n        name as supply_name,\n\n        ----------  numerics\n        cost as supply_cost,\n\n        ----------  booleans\n        perishable\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.037436Z", "completed_at": "2025-06-19T22:15:25.039068Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.039215Z", "completed_at": "2025-06-19T22:15:25.049774Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01287388801574707, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        name as customer_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.051425Z", "completed_at": "2025-06-19T22:15:25.052898Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.053054Z", "completed_at": "2025-06-19T22:15:25.062222Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011367082595825195, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_order_items", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_items\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as order_item_id,\n        order_id,\n        sku as product_id\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.063905Z", "completed_at": "2025-06-19T22:15:25.065288Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.065427Z", "completed_at": "2025-06-19T22:15:25.075821Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012427091598510742, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        customer as customer_id,\n        ordered_at as order_date,\n        store_id,\n        subtotal,\n        tax_paid,\n        order_total,\n        'completed' as status  -- Assuming all orders are completed since we don't have status in raw data\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.077531Z", "completed_at": "2025-06-19T22:15:25.079061Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.079204Z", "completed_at": "2025-06-19T22:15:25.088828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011838912963867188, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_products", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_products\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        sku as product_id,\n\n        ----------  strings\n        name as product_name,\n        type as product_type,\n        description,\n\n        ----------  numerics\n        price as product_price,\n\n        ----------  booleans\n        type = 'food' as is_food_item,\n        type = 'drink' as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.090571Z", "completed_at": "2025-06-19T22:15:25.093637Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.093795Z", "completed_at": "2025-06-19T22:15:25.103315Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013282060623168945, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_stores", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_stores\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as store_id,\n\n        ----------  strings\n        name as store_name,\n\n        ----------  timestamps\n        opened_at as opened_at,\n\n        ----------  numerics\n        tax_rate\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_stores\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.105136Z", "completed_at": "2025-06-19T22:15:25.108852Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.109018Z", "completed_at": "2025-06-19T22:15:25.112640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00850987434387207, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_supplies_supply_cost__0.56f9d0fff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_supplies\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.114440Z", "completed_at": "2025-06-19T22:15:25.116302Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.116450Z", "completed_at": "2025-06-19T22:15:25.120619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00701594352722168, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_perishable.b0ad96f801", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perishable\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere perishable is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.122211Z", "completed_at": "2025-06-19T22:15:25.124089Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.124236Z", "completed_at": "2025-06-19T22:15:25.127643Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006387948989868164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_product_id.ecc7615471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.129555Z", "completed_at": "2025-06-19T22:15:25.131948Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.132172Z", "completed_at": "2025-06-19T22:15:25.137051Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008514642715454102, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_cost.5de3da4f1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_cost\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_cost is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.138965Z", "completed_at": "2025-06-19T22:15:25.141170Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.141389Z", "completed_at": "2025-06-19T22:15:25.144536Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0066149234771728516, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_id.2638ae6962", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.146355Z", "completed_at": "2025-06-19T22:15:25.148359Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.148505Z", "completed_at": "2025-06-19T22:15:25.152596Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007228851318359375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_name.cc30977dd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_name\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.154463Z", "completed_at": "2025-06-19T22:15:25.156722Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.156909Z", "completed_at": "2025-06-19T22:15:25.160373Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006894111633300781, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_order_id.2063801f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.162148Z", "completed_at": "2025-06-19T22:15:25.164266Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.164480Z", "completed_at": "2025-06-19T22:15:25.167759Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006641864776611328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_order_item_id.26a7e2bc35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.169673Z", "completed_at": "2025-06-19T22:15:25.171693Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.171867Z", "completed_at": "2025-06-19T22:15:25.175442Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067119598388671875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_product_id.5154a8a6f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.177223Z", "completed_at": "2025-06-19T22:15:25.179040Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.179185Z", "completed_at": "2025-06-19T22:15:25.207477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03124690055847168, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_order_items_order_item_id.90e333a108", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.209308Z", "completed_at": "2025-06-19T22:15:25.211389Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.211556Z", "completed_at": "2025-06-19T22:15:25.215088Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006717205047607422, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.216908Z", "completed_at": "2025-06-19T22:15:25.220460Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.220628Z", "completed_at": "2025-06-19T22:15:25.265934Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05007529258728027, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_order_items_order_id__order_id__ref_stg_orders_.dbe9930c54", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.267751Z", "completed_at": "2025-06-19T22:15:25.269805Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.269963Z", "completed_at": "2025-06-19T22:15:25.290264Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02344489097595215, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.292152Z", "completed_at": "2025-06-19T22:15:25.296056Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.296217Z", "completed_at": "2025-06-19T22:15:25.302123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010969161987304688, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.accepted_values_stg_products_product_type__beverage__jaffle.a9aed4257e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_type as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n    group by product_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'beverage','jaffle'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.303929Z", "completed_at": "2025-06-19T22:15:25.306077Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.306249Z", "completed_at": "2025-06-19T22:15:25.309706Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0066852569580078125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_products_product_price__0.d7d70a9cd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_products\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.311312Z", "completed_at": "2025-06-19T22:15:25.313251Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.313391Z", "completed_at": "2025-06-19T22:15:25.316446Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005952119827270508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_is_drink_item.339e87c30d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.318201Z", "completed_at": "2025-06-19T22:15:25.320326Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.320497Z", "completed_at": "2025-06-19T22:15:25.323885Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006714820861816406, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_is_food_item.8e5e6fcdb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.325753Z", "completed_at": "2025-06-19T22:15:25.327741Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.327904Z", "completed_at": "2025-06-19T22:15:25.332155Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00745081901550293, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_id.6373b0acf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.334023Z", "completed_at": "2025-06-19T22:15:25.335930Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.336079Z", "completed_at": "2025-06-19T22:15:25.339200Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060350894927978516, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_name.0b59e4b939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.340800Z", "completed_at": "2025-06-19T22:15:25.342779Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.342927Z", "completed_at": "2025-06-19T22:15:25.346038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006227016448974609, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_price.d96fdc5e1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.347791Z", "completed_at": "2025-06-19T22:15:25.349883Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.350028Z", "completed_at": "2025-06-19T22:15:25.353435Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006575107574462891, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_type.7dbdaaf4d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_type\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.355219Z", "completed_at": "2025-06-19T22:15:25.357460Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.357613Z", "completed_at": "2025-06-19T22:15:25.364036Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00968313217163086, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_order_items_product_id__product_id__ref_stg_products_.886a82c26c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.365848Z", "completed_at": "2025-06-19T22:15:25.367948Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.368096Z", "completed_at": "2025-06-19T22:15:25.372652Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007856130599975586, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_supplies_product_id__product_id__ref_stg_products_.b24247ed0a", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_supplies\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.374647Z", "completed_at": "2025-06-19T22:15:25.376674Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.376834Z", "completed_at": "2025-06-19T22:15:25.381241Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007561922073364258, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_products_product_id.7d950a1467", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.383062Z", "completed_at": "2025-06-19T22:15:25.385067Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.385208Z", "completed_at": "2025-06-19T22:15:25.388469Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006441831588745117, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_stores_tax_rate__1__0.4b4a0f1520", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_stores\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.390246Z", "completed_at": "2025-06-19T22:15:25.392498Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.392665Z", "completed_at": "2025-06-19T22:15:25.395910Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006623983383178711, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_opened_at.7656b80b64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opened_at\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere opened_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.397859Z", "completed_at": "2025-06-19T22:15:25.401365Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.401508Z", "completed_at": "2025-06-19T22:15:25.404896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008195877075195312, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_store_id.ebecf07ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.406846Z", "completed_at": "2025-06-19T22:15:25.408615Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.408760Z", "completed_at": "2025-06-19T22:15:25.411597Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005676984786987305, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_store_name.a23576c3a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_name\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.413342Z", "completed_at": "2025-06-19T22:15:25.415555Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.415703Z", "completed_at": "2025-06-19T22:15:25.418829Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006385326385498047, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_tax_rate.b05a8726c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tax_rate\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere tax_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.420537Z", "completed_at": "2025-06-19T22:15:25.422569Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.422708Z", "completed_at": "2025-06-19T22:15:25.426540Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007050991058349609, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_stores_store_id.2e80d074c2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is not null\ngroup by store_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.428410Z", "completed_at": "2025-06-19T22:15:25.431354Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.431499Z", "completed_at": "2025-06-19T22:15:25.451970Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024106740951538086, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.supplies", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_supplies\"", "relation_name": "\"jaffle_platform\".\"main\".\"supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:25.453611Z", "completed_at": "2025-06-19T22:15:25.456010Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:25.456174Z", "completed_at": "2025-06-19T22:15:26.376289Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9231972694396973, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.order_items", "compiled": true, "compiled_code": "with order_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_order_items\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\nproducts as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_products\"\n\n),\n\nsupplies as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_supplies\"\n\n),\n\norder_supplies_summary as (\n\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n\n),\n\njoined as (\n\n    select\n        order_items.*,\n\n        orders.order_date,\n        orders.store_id,\n\n        products.product_name,\n        \n    round(1.0 * products.product_price / 100, 2)\n as product_price,\n        products.is_food_item,\n        products.is_drink_item,\n\n        \n    round(1.0 * order_supplies_summary.supply_cost / 100, 2)\n as supply_cost,\n\n        -- calculated fields\n        \n    round(1.0 * products.product_price - coalesce(order_supplies_summary.supply_cost, 0) / 100, 2)\n as gross_profit_per_item\n\n    from order_items\n\n    left join orders on order_items.order_id = orders.order_id\n\n    left join products on order_items.product_id = products.product_id\n\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.378136Z", "completed_at": "2025-06-19T22:15:26.379461Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.379613Z", "completed_at": "2025-06-19T22:15:26.389578Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012030363082885742, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.products", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_products\"", "relation_name": "\"jaffle_platform\".\"main\".\"products\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.391243Z", "completed_at": "2025-06-19T22:15:26.393274Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.393432Z", "completed_at": "2025-06-19T22:15:26.398053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007771015167236328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_order_items_product_price__0.43ad7e7f39", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.399828Z", "completed_at": "2025-06-19T22:15:26.401634Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.401794Z", "completed_at": "2025-06-19T22:15:26.405237Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0063838958740234375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_order_items_supply_cost__0.840b4d2b26", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.407105Z", "completed_at": "2025-06-19T22:15:26.409153Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.409311Z", "completed_at": "2025-06-19T22:15:26.412377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061798095703125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_gross_profit_per_item.48da24203b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gross_profit_per_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere gross_profit_per_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.414031Z", "completed_at": "2025-06-19T22:15:26.415740Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.415885Z", "completed_at": "2025-06-19T22:15:26.419312Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00613713264465332, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_is_drink_item.6bb8231b5a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.421068Z", "completed_at": "2025-06-19T22:15:26.422887Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.423038Z", "completed_at": "2025-06-19T22:15:26.427140Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006990909576416016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_is_food_item.c5a4aa0725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.428885Z", "completed_at": "2025-06-19T22:15:26.430866Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.431014Z", "completed_at": "2025-06-19T22:15:26.434336Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0064470767974853516, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_date.287d23d5d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.436059Z", "completed_at": "2025-06-19T22:15:26.438111Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.438331Z", "completed_at": "2025-06-19T22:15:26.441276Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060749053955078125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_id.0207cf2b74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.443026Z", "completed_at": "2025-06-19T22:15:26.445008Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.445174Z", "completed_at": "2025-06-19T22:15:26.448196Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00606989860534668, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_item_id.c6fda366bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.449876Z", "completed_at": "2025-06-19T22:15:26.451664Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.451813Z", "completed_at": "2025-06-19T22:15:26.455873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006902933120727539, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_id.d5e49d7c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.457629Z", "completed_at": "2025-06-19T22:15:26.459309Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.459449Z", "completed_at": "2025-06-19T22:15:26.462461Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005741119384765625, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_name.86cd0cf29d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.464036Z", "completed_at": "2025-06-19T22:15:26.465703Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.465843Z", "completed_at": "2025-06-19T22:15:26.469129Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060579776763916016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_price.9e29b4995d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.471033Z", "completed_at": "2025-06-19T22:15:26.472869Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.473013Z", "completed_at": "2025-06-19T22:15:26.476117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005954742431640625, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_store_id.dcf872af5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.477819Z", "completed_at": "2025-06-19T22:15:26.480282Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.480430Z", "completed_at": "2025-06-19T22:15:26.487704Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011074066162109375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_order_items_product_id__product_id__ref_stg_products_.32c12f5221", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.489645Z", "completed_at": "2025-06-19T22:15:26.491884Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.492034Z", "completed_at": "2025-06-19T22:15:26.498175Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009383201599121094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_order_items_store_id__store_id__ref_stg_stores_.3506d5359d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.499773Z", "completed_at": "2025-06-19T22:15:26.501437Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.501578Z", "completed_at": "2025-06-19T22:15:26.523072Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02426004409790039, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_order_items_order_item_id.7d0a7e900a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:26.525617Z", "completed_at": "2025-06-19T22:15:26.528025Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:26.528190Z", "completed_at": "2025-06-19T22:15:27.209163Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6841349601745605, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.210992Z", "completed_at": "2025-06-19T22:15:27.213125Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.213285Z", "completed_at": "2025-06-19T22:15:27.217307Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007260322570800781, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.219181Z", "completed_at": "2025-06-19T22:15:27.221233Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.221389Z", "completed_at": "2025-06-19T22:15:27.224904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067822933197021484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.226702Z", "completed_at": "2025-06-19T22:15:27.228435Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.228578Z", "completed_at": "2025-06-19T22:15:27.231988Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006237983703613281, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.233987Z", "completed_at": "2025-06-19T22:15:27.236919Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.237081Z", "completed_at": "2025-06-19T22:15:27.240624Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007578134536743164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.242528Z", "completed_at": "2025-06-19T22:15:27.244808Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.244977Z", "completed_at": "2025-06-19T22:15:27.248242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00668787956237793, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.249977Z", "completed_at": "2025-06-19T22:15:27.252068Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.252221Z", "completed_at": "2025-06-19T22:15:27.255348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006293058395385742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.257095Z", "completed_at": "2025-06-19T22:15:27.259232Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.259396Z", "completed_at": "2025-06-19T22:15:27.262531Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006470918655395508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.264303Z", "completed_at": "2025-06-19T22:15:27.267475Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.267613Z", "completed_at": "2025-06-19T22:15:27.270662Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00728607177734375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.272562Z", "completed_at": "2025-06-19T22:15:27.274801Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.274990Z", "completed_at": "2025-06-19T22:15:27.277839Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006127119064331055, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.279477Z", "completed_at": "2025-06-19T22:15:27.281525Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.281665Z", "completed_at": "2025-06-19T22:15:27.284561Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006001949310302734, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.286228Z", "completed_at": "2025-06-19T22:15:27.288265Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.288472Z", "completed_at": "2025-06-19T22:15:27.291610Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0062410831451416016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.293280Z", "completed_at": "2025-06-19T22:15:27.296361Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.296568Z", "completed_at": "2025-06-19T22:15:27.300180Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007866859436035156, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.301892Z", "completed_at": "2025-06-19T22:15:27.304065Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.304220Z", "completed_at": "2025-06-19T22:15:27.309756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008752822875976562, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.311479Z", "completed_at": "2025-06-19T22:15:27.313458Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.313645Z", "completed_at": "2025-06-19T22:15:27.330915Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020477294921875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.333078Z", "completed_at": "2025-06-19T22:15:27.335541Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.335705Z", "completed_at": "2025-06-19T22:15:27.357504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02495408058166504, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"orders\"\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n        \n        min(order_date) as first_order_at,\n        max(order_date) as most_recent_order_at,\n        count(*) as number_of_orders,\n\n        sum(food_items_count) as total_food_items,\n        sum(drink_items_count) as total_drink_items,\n        sum(total_items_count) as total_items,\n\n        \n    round(1.0 * sum(food_revenue * 100) / 100, 2)\n as total_food_revenue,\n        \n    round(1.0 * sum(drink_revenue * 100) / 100, 2)\n as total_drink_revenue,\n        \n    round(1.0 * sum(total_revenue * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(food_cost * 100) / 100, 2)\n as total_food_cost,\n        \n    round(1.0 * sum(drink_cost * 100) / 100, 2)\n as total_drink_cost,\n        \n    round(1.0 * sum(total_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(food_profit * 100) / 100, 2)\n as total_food_profit,\n        \n    round(1.0 * sum(drink_profit * 100) / 100, 2)\n as total_drink_profit,\n        \n    round(1.0 * sum(total_profit * 100) / 100, 2)\n as total_profit,\n\n        \n    round(1.0 * sum(total_revenue * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_value,\n        \n    round(1.0 * sum(total_profit * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_profit\n\n    from orders\n    group by 1\n\n),\n\njoined as (\n\n    select\n        customers.customer_id,\n        customers.customer_name,\n\n        customer_orders.first_order_at,\n        customer_orders.most_recent_order_at,\n        customer_orders.number_of_orders,\n\n        customer_orders.total_food_items,\n        customer_orders.total_drink_items,\n        customer_orders.total_items,\n\n        customer_orders.total_food_revenue,\n        customer_orders.total_drink_revenue,\n        customer_orders.total_revenue,\n\n        customer_orders.total_food_cost,\n        customer_orders.total_drink_cost,\n        customer_orders.total_cost,\n\n        customer_orders.total_food_profit,\n        customer_orders.total_drink_profit,\n        customer_orders.total_profit,\n\n        customer_orders.avg_order_value,\n        customer_orders.avg_order_profit\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"customers\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.359434Z", "completed_at": "2025-06-19T22:15:27.361396Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.361562Z", "completed_at": "2025-06-19T22:15:27.365195Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00675511360168457, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_avg_order_value__0.c1c1601f2c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_order_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.366935Z", "completed_at": "2025-06-19T22:15:27.368665Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.368819Z", "completed_at": "2025-06-19T22:15:27.372320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006284952163696289, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_number_of_orders__0.037b1dd78b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not number_of_orders >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.374104Z", "completed_at": "2025-06-19T22:15:27.376121Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.376272Z", "completed_at": "2025-06-19T22:15:27.381210Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008083105087280273, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_cost__0.0a4e71d80a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.383001Z", "completed_at": "2025-06-19T22:15:27.384968Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.385146Z", "completed_at": "2025-06-19T22:15:27.388666Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006548881530761719, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_cost__0.fa5c6d903f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.390380Z", "completed_at": "2025-06-19T22:15:27.392448Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.392594Z", "completed_at": "2025-06-19T22:15:27.395768Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006288766860961914, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_items__0.9997c8c335", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.397668Z", "completed_at": "2025-06-19T22:15:27.399871Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.400042Z", "completed_at": "2025-06-19T22:15:27.403270Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006633281707763672, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_revenue__0.b99e7e96c4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.404970Z", "completed_at": "2025-06-19T22:15:27.407110Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.407246Z", "completed_at": "2025-06-19T22:15:27.410779Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006815910339355469, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_cost__0.c65392d802", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.412566Z", "completed_at": "2025-06-19T22:15:27.415998Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.416148Z", "completed_at": "2025-06-19T22:15:27.419440Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007828950881958008, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_items__0.828da3e8bc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.421274Z", "completed_at": "2025-06-19T22:15:27.423106Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.423263Z", "completed_at": "2025-06-19T22:15:27.426443Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006193876266479492, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_revenue__0.3e10988d11", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.428365Z", "completed_at": "2025-06-19T22:15:27.430594Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.430770Z", "completed_at": "2025-06-19T22:15:27.434359Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006913900375366211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_items__0.3d7b0a080a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.436112Z", "completed_at": "2025-06-19T22:15:27.438115Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.438333Z", "completed_at": "2025-06-19T22:15:27.442126Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006972074508666992, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_revenue__0.217c0fc785", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.443838Z", "completed_at": "2025-06-19T22:15:27.446960Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.447105Z", "completed_at": "2025-06-19T22:15:27.450005Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007061958312988281, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.451767Z", "completed_at": "2025-06-19T22:15:27.453710Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.453865Z", "completed_at": "2025-06-19T22:15:27.457304Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006521940231323242, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_customers_customer_name.2bf8eaa065", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_name\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.458996Z", "completed_at": "2025-06-19T22:15:27.461344Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.461516Z", "completed_at": "2025-06-19T22:15:27.468171Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01011037826538086, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:15:27.469932Z", "completed_at": "2025-06-19T22:15:27.471895Z"}, {"name": "execute", "started_at": "2025-06-19T22:15:27.472050Z", "completed_at": "2025-06-19T22:15:27.476203Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007200002670288086, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 2.7916648387908936, "args": {"export_saved_queries": false, "which": "build", "require_nested_cumulative_type_params": false, "invocation_command": "dbt build", "vars": {}, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt/logs", "use_colors": true, "include_saved_query": false, "partial_parse_file_diff": true, "static_parser": true, "require_explicit_package_overrides_for_builtin_materializations": true, "require_batched_execution_for_custom_microbatch_strategy": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt", "select": [], "indirect_selection": "eager", "require_yaml_configuration_for_mf_time_spines": false, "resource_types": [], "strict_mode": false, "version_check": true, "skip_nodes_if_on_run_start_fails": false, "log_level": "info", "log_level_file": "debug", "exclude_resource_types": [], "log_format_file": "debug", "state_modified_compare_more_unrendered_values": false, "require_resource_names_without_spaces": false, "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "source_freshness_run_project_hooks": false, "show_resource_report": false, "write_json": true, "quiet": false, "exclude": [], "log_format": "default", "populate_cache": true, "show": false, "state_modified_compare_vars": false, "use_colors_file": true, "print": true, "cache_selected_only": false, "printer_width": 80, "log_file_max_bytes": 10485760, "partial_parse": true, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt", "favor_state": false, "macro_debugging": false, "send_anonymous_usage_stats": true, "empty": false, "defer": false}}