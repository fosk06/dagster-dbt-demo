{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-19T22:31:11.550591Z", "invocation_id": "4b4c09fe-f0c2-47a7-a9a1-3d30f6984019", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.824194Z", "completed_at": "2025-06-19T22:31:08.829977Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.830156Z", "completed_at": "2025-06-19T22:31:08.843297Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02006983757019043, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_customers_id.fd630b40ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.845275Z", "completed_at": "2025-06-19T22:31:08.847603Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.847770Z", "completed_at": "2025-06-19T22:31:08.850956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006651878356933594, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_items_id.ba04a3f168", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.852611Z", "completed_at": "2025-06-19T22:31:08.854563Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.854708Z", "completed_at": "2025-06-19T22:31:08.857882Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006260871887207031, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_orders_id.8d0b417515", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.859816Z", "completed_at": "2025-06-19T22:31:08.861664Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.861812Z", "completed_at": "2025-06-19T22:31:08.864934Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006009101867675781, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_products_sku.9ea5f86121", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sku\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.866558Z", "completed_at": "2025-06-19T22:31:08.868246Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.868379Z", "completed_at": "2025-06-19T22:31:08.872084Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006487131118774414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_stores_id.bf84e62e4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.873840Z", "completed_at": "2025-06-19T22:31:08.875756Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.875894Z", "completed_at": "2025-06-19T22:31:08.878732Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005793094635009766, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_not_null_main_raw_supplies_id.fe2c38d6d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_supplies\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.880595Z", "completed_at": "2025-06-19T22:31:08.883793Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.883988Z", "completed_at": "2025-06-19T22:31:08.893077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013642072677612305, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_unique_main_raw_customers_id.42581a7c1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.895305Z", "completed_at": "2025-06-19T22:31:08.897503Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.897669Z", "completed_at": "2025-06-19T22:31:08.946495Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.052278995513916016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_unique_main_raw_items_id.9fb85e5588", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.948596Z", "completed_at": "2025-06-19T22:31:08.950696Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.950854Z", "completed_at": "2025-06-19T22:31:08.976182Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02858591079711914, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_unique_main_raw_orders_id.fd49aea3d7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.977930Z", "completed_at": "2025-06-19T22:31:08.979937Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.980079Z", "completed_at": "2025-06-19T22:31:08.984235Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007188081741333008, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_unique_main_raw_products_sku.7677d51e94", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sku as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is not null\ngroup by sku\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.985854Z", "completed_at": "2025-06-19T22:31:08.987912Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.988066Z", "completed_at": "2025-06-19T22:31:08.992051Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007095813751220703, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.source_unique_main_raw_stores_id.067b11d4e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:08.994012Z", "completed_at": "2025-06-19T22:31:08.995525Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:08.995666Z", "completed_at": "2025-06-19T22:31:09.025646Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.032257080078125, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_supplies", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_supplies\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as supply_id,\n        sku as product_id,\n\n        ----------  strings\n        name as supply_name,\n\n        ----------  numerics\n        cost as supply_cost,\n\n        ----------  booleans\n        perishable\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.028387Z", "completed_at": "2025-06-19T22:31:09.029766Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.029915Z", "completed_at": "2025-06-19T22:31:09.038854Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010966062545776367, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        name as customer_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.040365Z", "completed_at": "2025-06-19T22:31:09.042735Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.042937Z", "completed_at": "2025-06-19T22:31:09.052742Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012953996658325195, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_order_items", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_items\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as order_item_id,\n        order_id,\n        sku as product_id\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.054396Z", "completed_at": "2025-06-19T22:31:09.056031Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.056181Z", "completed_at": "2025-06-19T22:31:09.066739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013566017150878906, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        customer as customer_id,\n        ordered_at as order_date,\n        store_id,\n        subtotal,\n        tax_paid,\n        order_total,\n        'completed' as status  -- Assuming all orders are completed since we don't have status in raw data\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.069352Z", "completed_at": "2025-06-19T22:31:09.070843Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.070977Z", "completed_at": "2025-06-19T22:31:09.080509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011760234832763672, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_products", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_products\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        sku as product_id,\n\n        ----------  strings\n        name as product_name,\n        type as product_type,\n        description,\n\n        ----------  numerics\n        price as product_price,\n\n        ----------  booleans\n        type = 'food' as is_food_item,\n        type = 'drink' as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.082410Z", "completed_at": "2025-06-19T22:31:09.083791Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.083932Z", "completed_at": "2025-06-19T22:31:09.093691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011958122253417969, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.stg_stores", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_stores\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as store_id,\n\n        ----------  strings\n        name as store_name,\n\n        ----------  timestamps\n        opened_at as opened_at,\n\n        ----------  numerics\n        tax_rate\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_stores\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.095468Z", "completed_at": "2025-06-19T22:31:09.097745Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.097900Z", "completed_at": "2025-06-19T22:31:09.101712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007259845733642578, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_stg_supplies_supply_cost__0.56f9d0fff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_supplies\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.103483Z", "completed_at": "2025-06-19T22:31:09.105419Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.105578Z", "completed_at": "2025-06-19T22:31:09.108717Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0062291622161865234, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_supplies_perishable.b0ad96f801", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perishable\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere perishable is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.110537Z", "completed_at": "2025-06-19T22:31:09.113398Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.113536Z", "completed_at": "2025-06-19T22:31:09.116832Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007297992706298828, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_supplies_product_id.ecc7615471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.118574Z", "completed_at": "2025-06-19T22:31:09.120467Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.120606Z", "completed_at": "2025-06-19T22:31:09.123795Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006104946136474609, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_supplies_supply_cost.5de3da4f1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_cost\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_cost is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.125639Z", "completed_at": "2025-06-19T22:31:09.127773Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.127929Z", "completed_at": "2025-06-19T22:31:09.131008Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006263017654418945, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_supplies_supply_id.2638ae6962", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.132591Z", "completed_at": "2025-06-19T22:31:09.134581Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.134739Z", "completed_at": "2025-06-19T22:31:09.137879Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006139039993286133, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_supplies_supply_name.cc30977dd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_name\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.139650Z", "completed_at": "2025-06-19T22:31:09.141606Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.141751Z", "completed_at": "2025-06-19T22:31:09.146003Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00728297233581543, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_order_items_order_id.2063801f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.147645Z", "completed_at": "2025-06-19T22:31:09.149651Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.149799Z", "completed_at": "2025-06-19T22:31:09.153434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006669044494628906, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_order_items_order_item_id.26a7e2bc35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.155149Z", "completed_at": "2025-06-19T22:31:09.157009Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.157162Z", "completed_at": "2025-06-19T22:31:09.160258Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006003856658935547, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_order_items_product_id.5154a8a6f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.161927Z", "completed_at": "2025-06-19T22:31:09.163833Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.163991Z", "completed_at": "2025-06-19T22:31:09.188944Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027988910675048828, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_order_items_order_item_id.90e333a108", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.191144Z", "completed_at": "2025-06-19T22:31:09.193221Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.193375Z", "completed_at": "2025-06-19T22:31:09.197826Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007710933685302734, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.199503Z", "completed_at": "2025-06-19T22:31:09.202148Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.202317Z", "completed_at": "2025-06-19T22:31:09.252851Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.054412126541137695, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_stg_order_items_order_id__order_id__ref_stg_orders_.dbe9930c54", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.254741Z", "completed_at": "2025-06-19T22:31:09.256924Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.257080Z", "completed_at": "2025-06-19T22:31:09.275779Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02201390266418457, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.277544Z", "completed_at": "2025-06-19T22:31:09.279721Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.279871Z", "completed_at": "2025-06-19T22:31:09.284004Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007512092590332031, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_stg_products_product_type__beverage__jaffle.a9aed4257e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_type as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n    group by product_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'beverage','jaffle'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.285994Z", "completed_at": "2025-06-19T22:31:09.287947Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.288109Z", "completed_at": "2025-06-19T22:31:09.292784Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077741146087646484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_stg_products_product_price__0.d7d70a9cd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_products\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.294490Z", "completed_at": "2025-06-19T22:31:09.296518Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.296653Z", "completed_at": "2025-06-19T22:31:09.299877Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006382942199707031, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_is_drink_item.339e87c30d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.301814Z", "completed_at": "2025-06-19T22:31:09.303734Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.303890Z", "completed_at": "2025-06-19T22:31:09.307150Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006245136260986328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_is_food_item.8e5e6fcdb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.308963Z", "completed_at": "2025-06-19T22:31:09.311150Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.311296Z", "completed_at": "2025-06-19T22:31:09.314533Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0066449642181396484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_id.6373b0acf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.316290Z", "completed_at": "2025-06-19T22:31:09.318368Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.318505Z", "completed_at": "2025-06-19T22:31:09.322792Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0073468685150146484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_name.0b59e4b939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.324390Z", "completed_at": "2025-06-19T22:31:09.326623Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.326818Z", "completed_at": "2025-06-19T22:31:09.330331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0069580078125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_price.d96fdc5e1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.332043Z", "completed_at": "2025-06-19T22:31:09.334081Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.334234Z", "completed_at": "2025-06-19T22:31:09.337711Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00655817985534668, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_products_product_type.7dbdaaf4d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_type\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.339410Z", "completed_at": "2025-06-19T22:31:09.341720Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.341911Z", "completed_at": "2025-06-19T22:31:09.348082Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009684085845947266, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_stg_order_items_product_id__product_id__ref_stg_products_.886a82c26c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.349869Z", "completed_at": "2025-06-19T22:31:09.352510Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.352657Z", "completed_at": "2025-06-19T22:31:09.357825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008985280990600586, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_stg_supplies_product_id__product_id__ref_stg_products_.b24247ed0a", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_supplies\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.359604Z", "completed_at": "2025-06-19T22:31:09.392936Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.393109Z", "completed_at": "2025-06-19T22:31:09.397068Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0383915901184082, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_products_product_id.7d950a1467", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.398822Z", "completed_at": "2025-06-19T22:31:09.400658Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.400821Z", "completed_at": "2025-06-19T22:31:09.404226Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006293058395385742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_stg_stores_tax_rate__1__0.4b4a0f1520", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_stores\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.405997Z", "completed_at": "2025-06-19T22:31:09.407848Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.407995Z", "completed_at": "2025-06-19T22:31:09.411089Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005978822708129883, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_opened_at.7656b80b64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opened_at\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere opened_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.412775Z", "completed_at": "2025-06-19T22:31:09.414819Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.414965Z", "completed_at": "2025-06-19T22:31:09.418125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006361961364746094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_store_id.ebecf07ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.419950Z", "completed_at": "2025-06-19T22:31:09.422925Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.423079Z", "completed_at": "2025-06-19T22:31:09.426366Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007340192794799805, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_store_name.a23576c3a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_name\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.428055Z", "completed_at": "2025-06-19T22:31:09.429802Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.429941Z", "completed_at": "2025-06-19T22:31:09.433282Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006100177764892578, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_stg_stores_tax_rate.b05a8726c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tax_rate\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere tax_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.434990Z", "completed_at": "2025-06-19T22:31:09.436882Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.437038Z", "completed_at": "2025-06-19T22:31:09.440751Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006749153137207031, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_stg_stores_store_id.2e80d074c2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is not null\ngroup by store_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.442552Z", "completed_at": "2025-06-19T22:31:09.444257Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.444415Z", "completed_at": "2025-06-19T22:31:09.527527Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08555102348327637, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.supplies", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_supplies\"", "relation_name": "\"jaffle_platform\".\"main\".\"supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:09.529354Z", "completed_at": "2025-06-19T22:31:09.531600Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:09.531759Z", "completed_at": "2025-06-19T22:31:10.471723Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9428982734680176, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.order_items", "compiled": true, "compiled_code": "with order_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_order_items\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\nproducts as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_products\"\n\n),\n\nsupplies as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_supplies\"\n\n),\n\norder_supplies_summary as (\n\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n\n),\n\njoined as (\n\n    select\n        order_items.*,\n\n        orders.order_date,\n        orders.store_id,\n\n        products.product_name,\n        \n    round(1.0 * products.product_price / 100, 2)\n as product_price,\n        products.is_food_item,\n        products.is_drink_item,\n\n        \n    round(1.0 * order_supplies_summary.supply_cost / 100, 2)\n as supply_cost,\n\n        -- calculated fields\n        \n    round(1.0 * products.product_price - coalesce(order_supplies_summary.supply_cost, 0) / 100, 2)\n as gross_profit_per_item\n\n    from order_items\n\n    left join orders on order_items.order_id = orders.order_id\n\n    left join products on order_items.product_id = products.product_id\n\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.473409Z", "completed_at": "2025-06-19T22:31:10.475819Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.475965Z", "completed_at": "2025-06-19T22:31:10.486291Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013390064239501953, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.products", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_products\"", "relation_name": "\"jaffle_platform\".\"main\".\"products\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.487767Z", "completed_at": "2025-06-19T22:31:10.489675Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.489832Z", "completed_at": "2025-06-19T22:31:10.493420Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006573200225830078, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_order_items_product_price__0.43ad7e7f39", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.495147Z", "completed_at": "2025-06-19T22:31:10.496973Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.497151Z", "completed_at": "2025-06-19T22:31:10.501637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007344722747802734, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_order_items_supply_cost__0.840b4d2b26", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.503175Z", "completed_at": "2025-06-19T22:31:10.505009Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.505152Z", "completed_at": "2025-06-19T22:31:10.508292Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006028890609741211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_gross_profit_per_item.48da24203b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gross_profit_per_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere gross_profit_per_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.510049Z", "completed_at": "2025-06-19T22:31:10.512016Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.512168Z", "completed_at": "2025-06-19T22:31:10.515361Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00638580322265625, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_is_drink_item.6bb8231b5a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.517211Z", "completed_at": "2025-06-19T22:31:10.519134Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.519350Z", "completed_at": "2025-06-19T22:31:10.522477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0062520503997802734, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_is_food_item.c5a4aa0725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.524139Z", "completed_at": "2025-06-19T22:31:10.526017Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.526157Z", "completed_at": "2025-06-19T22:31:10.530171Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006922721862792969, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_date.287d23d5d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.531854Z", "completed_at": "2025-06-19T22:31:10.533910Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.534046Z", "completed_at": "2025-06-19T22:31:10.536966Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005982875823974609, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_id.0207cf2b74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.538575Z", "completed_at": "2025-06-19T22:31:10.540549Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.540694Z", "completed_at": "2025-06-19T22:31:10.543728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060558319091796875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_order_item_id.c6fda366bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.545410Z", "completed_at": "2025-06-19T22:31:10.547400Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.547557Z", "completed_at": "2025-06-19T22:31:10.550783Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006269931793212891, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_id.d5e49d7c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.552395Z", "completed_at": "2025-06-19T22:31:10.554207Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.554356Z", "completed_at": "2025-06-19T22:31:10.558854Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007436037063598633, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_name.86cd0cf29d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.560652Z", "completed_at": "2025-06-19T22:31:10.562580Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.562724Z", "completed_at": "2025-06-19T22:31:10.565925Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006292819976806641, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_product_price.9e29b4995d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.567763Z", "completed_at": "2025-06-19T22:31:10.569457Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.569591Z", "completed_at": "2025-06-19T22:31:10.572647Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005724191665649414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_order_items_store_id.dcf872af5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.574330Z", "completed_at": "2025-06-19T22:31:10.576647Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.576784Z", "completed_at": "2025-06-19T22:31:10.582472Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009226083755493164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_order_items_product_id__product_id__ref_stg_products_.32c12f5221", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.584343Z", "completed_at": "2025-06-19T22:31:10.586686Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.586834Z", "completed_at": "2025-06-19T22:31:10.594331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010965108871459961, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_order_items_store_id__store_id__ref_stg_stores_.3506d5359d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.596038Z", "completed_at": "2025-06-19T22:31:10.597817Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.597960Z", "completed_at": "2025-06-19T22:31:10.622240Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02723407745361328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_order_items_order_item_id.7d0a7e900a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:10.624675Z", "completed_at": "2025-06-19T22:31:10.627282Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:10.627438Z", "completed_at": "2025-06-19T22:31:11.286489Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6625070571899414, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.288259Z", "completed_at": "2025-06-19T22:31:11.291360Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.291512Z", "completed_at": "2025-06-19T22:31:11.295414Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008120059967041016, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.297576Z", "completed_at": "2025-06-19T22:31:11.299546Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.299702Z", "completed_at": "2025-06-19T22:31:11.303097Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006490945816040039, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.304789Z", "completed_at": "2025-06-19T22:31:11.306546Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.306697Z", "completed_at": "2025-06-19T22:31:11.310015Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006098031997680664, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.311724Z", "completed_at": "2025-06-19T22:31:11.313700Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.313843Z", "completed_at": "2025-06-19T22:31:11.317264Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006462812423706055, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.318912Z", "completed_at": "2025-06-19T22:31:11.322185Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.322374Z", "completed_at": "2025-06-19T22:31:11.325483Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007610321044921875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.327231Z", "completed_at": "2025-06-19T22:31:11.329176Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.329315Z", "completed_at": "2025-06-19T22:31:11.332277Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006040096282958984, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.334114Z", "completed_at": "2025-06-19T22:31:11.336162Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.336313Z", "completed_at": "2025-06-19T22:31:11.339433Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006203889846801758, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.341057Z", "completed_at": "2025-06-19T22:31:11.343116Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.343295Z", "completed_at": "2025-06-19T22:31:11.346425Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006308078765869141, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.348266Z", "completed_at": "2025-06-19T22:31:11.351699Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.351832Z", "completed_at": "2025-06-19T22:31:11.355025Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007704019546508789, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.356709Z", "completed_at": "2025-06-19T22:31:11.358726Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.358871Z", "completed_at": "2025-06-19T22:31:11.361915Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006066799163818359, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.363541Z", "completed_at": "2025-06-19T22:31:11.365524Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.365672Z", "completed_at": "2025-06-19T22:31:11.368856Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006174802780151367, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.370516Z", "completed_at": "2025-06-19T22:31:11.372517Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.372669Z", "completed_at": "2025-06-19T22:31:11.376041Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006435871124267578, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.377710Z", "completed_at": "2025-06-19T22:31:11.381103Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.381267Z", "completed_at": "2025-06-19T22:31:11.386677Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009903192520141602, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.388432Z", "completed_at": "2025-06-19T22:31:11.390371Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.390505Z", "completed_at": "2025-06-19T22:31:11.406412Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019017934799194336, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.408802Z", "completed_at": "2025-06-19T22:31:11.411384Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.411527Z", "completed_at": "2025-06-19T22:31:11.433467Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02529001235961914, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jaffle_platform.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"orders\"\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n        \n        min(order_date) as first_order_at,\n        max(order_date) as most_recent_order_at,\n        count(*) as number_of_orders,\n\n        sum(food_items_count) as total_food_items,\n        sum(drink_items_count) as total_drink_items,\n        sum(total_items_count) as total_items,\n\n        \n    round(1.0 * sum(food_revenue * 100) / 100, 2)\n as total_food_revenue,\n        \n    round(1.0 * sum(drink_revenue * 100) / 100, 2)\n as total_drink_revenue,\n        \n    round(1.0 * sum(total_revenue * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(food_cost * 100) / 100, 2)\n as total_food_cost,\n        \n    round(1.0 * sum(drink_cost * 100) / 100, 2)\n as total_drink_cost,\n        \n    round(1.0 * sum(total_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(food_profit * 100) / 100, 2)\n as total_food_profit,\n        \n    round(1.0 * sum(drink_profit * 100) / 100, 2)\n as total_drink_profit,\n        \n    round(1.0 * sum(total_profit * 100) / 100, 2)\n as total_profit,\n\n        \n    round(1.0 * sum(total_revenue * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_value,\n        \n    round(1.0 * sum(total_profit * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_profit\n\n    from orders\n    group by 1\n\n),\n\njoined as (\n\n    select\n        customers.customer_id,\n        customers.customer_name,\n\n        customer_orders.first_order_at,\n        customer_orders.most_recent_order_at,\n        customer_orders.number_of_orders,\n\n        customer_orders.total_food_items,\n        customer_orders.total_drink_items,\n        customer_orders.total_items,\n\n        customer_orders.total_food_revenue,\n        customer_orders.total_drink_revenue,\n        customer_orders.total_revenue,\n\n        customer_orders.total_food_cost,\n        customer_orders.total_drink_cost,\n        customer_orders.total_cost,\n\n        customer_orders.total_food_profit,\n        customer_orders.total_drink_profit,\n        customer_orders.total_profit,\n\n        customer_orders.avg_order_value,\n        customer_orders.avg_order_profit\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"customers\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.435189Z", "completed_at": "2025-06-19T22:31:11.437358Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.437525Z", "completed_at": "2025-06-19T22:31:11.440968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006684780120849609, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_avg_order_value__0.c1c1601f2c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_order_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.442789Z", "completed_at": "2025-06-19T22:31:11.444757Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.444914Z", "completed_at": "2025-06-19T22:31:11.448229Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065479278564453125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_number_of_orders__0.037b1dd78b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not number_of_orders >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.450144Z", "completed_at": "2025-06-19T22:31:11.452303Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.452472Z", "completed_at": "2025-06-19T22:31:11.455813Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006569862365722656, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_cost__0.0a4e71d80a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.457483Z", "completed_at": "2025-06-19T22:31:11.459494Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.459629Z", "completed_at": "2025-06-19T22:31:11.464031Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007524013519287109, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_drink_cost__0.fa5c6d903f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.465812Z", "completed_at": "2025-06-19T22:31:11.467620Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.467774Z", "completed_at": "2025-06-19T22:31:11.471035Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006180763244628906, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_drink_items__0.9997c8c335", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.472722Z", "completed_at": "2025-06-19T22:31:11.474824Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.474968Z", "completed_at": "2025-06-19T22:31:11.478379Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006669044494628906, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_drink_revenue__0.b99e7e96c4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.480183Z", "completed_at": "2025-06-19T22:31:11.482242Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.482424Z", "completed_at": "2025-06-19T22:31:11.486053Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006824970245361328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_food_cost__0.c65392d802", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.487756Z", "completed_at": "2025-06-19T22:31:11.489790Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.489948Z", "completed_at": "2025-06-19T22:31:11.494413Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007594108581542969, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_food_items__0.828da3e8bc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.496031Z", "completed_at": "2025-06-19T22:31:11.497931Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.498123Z", "completed_at": "2025-06-19T22:31:11.501357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006195068359375, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_food_revenue__0.3e10988d11", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.503080Z", "completed_at": "2025-06-19T22:31:11.504984Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.505134Z", "completed_at": "2025-06-19T22:31:11.508519Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006345987319946289, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_items__0.3d7b0a080a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.510326Z", "completed_at": "2025-06-19T22:31:11.512398Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.512545Z", "completed_at": "2025-06-19T22:31:11.515658Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006247997283935547, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.dbt_utils_accepted_range_customers_total_revenue__0.217c0fc785", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.517412Z", "completed_at": "2025-06-19T22:31:11.519493Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.519638Z", "completed_at": "2025-06-19T22:31:11.522517Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005987882614135742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.524217Z", "completed_at": "2025-06-19T22:31:11.527410Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.527555Z", "completed_at": "2025-06-19T22:31:11.530477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007205009460449219, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.not_null_customers_customer_name.2bf8eaa065", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_name\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.532221Z", "completed_at": "2025-06-19T22:31:11.534249Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.534401Z", "completed_at": "2025-06-19T22:31:11.540085Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008879899978637695, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T22:31:11.542029Z", "completed_at": "2025-06-19T22:31:11.543775Z"}, {"name": "execute", "started_at": "2025-06-19T22:31:11.543919Z", "completed_at": "2025-06-19T22:31:11.547242Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006089925765991211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jaffle_platform.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 2.8794398307800293, "args": {"version_check": true, "log_file_max_bytes": 10485760, "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt", "quiet": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt", "invocation_command": "dbt build", "use_colors_file": true, "state_modified_compare_more_unrendered_values": false, "partial_parse": true, "skip_nodes_if_on_run_start_fails": false, "partial_parse_file_diff": true, "require_nested_cumulative_type_params": false, "show": false, "show_resource_report": false, "static_parser": true, "write_json": true, "export_saved_queries": false, "send_anonymous_usage_stats": true, "include_saved_query": false, "exclude": [], "log_format": "default", "log_level_file": "debug", "macro_debugging": false, "resource_types": [], "select": [], "favor_state": false, "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt/logs", "require_batched_execution_for_custom_microbatch_strategy": false, "print": true, "exclude_resource_types": [], "source_freshness_run_project_hooks": false, "log_level": "info", "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "defer": false, "log_format_file": "debug", "require_resource_names_without_spaces": false, "warn_error_options": {"include": [], "exclude": []}, "empty": false, "printer_width": 80, "populate_cache": true, "require_yaml_configuration_for_mf_time_spines": false, "cache_selected_only": false, "indirect_selection": "eager", "vars": {}, "which": "build", "introspect": true, "state_modified_compare_vars": false}}