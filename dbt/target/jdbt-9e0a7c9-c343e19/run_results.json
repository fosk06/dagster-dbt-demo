{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.8", "generated_at": "2025-06-19T21:56:07.246156Z", "invocation_id": "62fbb4f6-f8ca-4b52-b939-a73228348086", "env": {}}, "results": [{"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.357547Z", "completed_at": "2025-06-19T21:56:04.365250Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.365493Z", "completed_at": "2025-06-19T21:56:04.377495Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02130913734436035, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_customers_id.fd630b40ed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.379992Z", "completed_at": "2025-06-19T21:56:04.382104Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.382345Z", "completed_at": "2025-06-19T21:56:04.386555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00789785385131836, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_items_id.ba04a3f168", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.389184Z", "completed_at": "2025-06-19T21:56:04.391264Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.391498Z", "completed_at": "2025-06-19T21:56:04.395423Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007598876953125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_orders_id.8d0b417515", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.397873Z", "completed_at": "2025-06-19T21:56:04.400041Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.400278Z", "completed_at": "2025-06-19T21:56:04.405026Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008411884307861328, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_products_sku.9ea5f86121", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect sku\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.407573Z", "completed_at": "2025-06-19T21:56:04.409431Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.409666Z", "completed_at": "2025-06-19T21:56:04.413515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0074329376220703125, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_stores_id.bf84e62e4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.416289Z", "completed_at": "2025-06-19T21:56:04.418498Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.418765Z", "completed_at": "2025-06-19T21:56:04.422827Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007817983627319336, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_not_null_main_raw_supplies_id.fe2c38d6d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"jaffle_platform\".\"main\".\"raw_supplies\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.425361Z", "completed_at": "2025-06-19T21:56:04.428255Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.428487Z", "completed_at": "2025-06-19T21:56:04.435471Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011352062225341797, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_customers_id.42581a7c1b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_customers\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.438047Z", "completed_at": "2025-06-19T21:56:04.440171Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.440417Z", "completed_at": "2025-06-19T21:56:04.467068Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030400991439819336, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_items_id.9fb85e5588", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_items\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.469707Z", "completed_at": "2025-06-19T21:56:04.471811Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.472148Z", "completed_at": "2025-06-19T21:56:04.493974Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025550127029418945, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_orders_id.fd49aea3d7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_orders\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.496387Z", "completed_at": "2025-06-19T21:56:04.498503Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.498738Z", "completed_at": "2025-06-19T21:56:04.503843Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008704900741577148, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_products_sku.7677d51e94", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    sku as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_products\"\nwhere sku is not null\ngroup by sku\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.506429Z", "completed_at": "2025-06-19T21:56:04.508547Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.508788Z", "completed_at": "2025-06-19T21:56:04.513625Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008498907089233398, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.source_unique_main_raw_stores_id.067b11d4e6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"raw_stores\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.516167Z", "completed_at": "2025-06-19T21:56:04.517758Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.517982Z", "completed_at": "2025-06-19T21:56:04.548326Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.032895803451538086, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_supplies", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_supplies\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as supply_id,\n        sku as product_id,\n\n        ----------  strings\n        name as supply_name,\n\n        ----------  numerics\n        cost as supply_cost,\n\n        ----------  booleans\n        perishable\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.551333Z", "completed_at": "2025-06-19T21:56:04.552877Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.553167Z", "completed_at": "2025-06-19T21:56:04.565766Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015156984329223633, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_customers", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        name as customer_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.567990Z", "completed_at": "2025-06-19T21:56:04.569583Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.569799Z", "completed_at": "2025-06-19T21:56:04.581417Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01415705680847168, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_order_items", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_items\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as order_item_id,\n        order_id,\n        sku as product_id\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.583563Z", "completed_at": "2025-06-19T21:56:04.585159Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.585375Z", "completed_at": "2025-06-19T21:56:04.598080Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015228748321533203, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_orders", "compiled": true, "compiled_code": "with source as (\n    select * from \"jaffle_platform\".\"main\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        customer as customer_id,\n        ordered_at as order_date,\n        store_id,\n        subtotal,\n        tax_paid,\n        order_total,\n        'completed' as status  -- Assuming all orders are completed since we don't have status in raw data\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.600227Z", "completed_at": "2025-06-19T21:56:04.601833Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.602051Z", "completed_at": "2025-06-19T21:56:04.614543Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014986991882324219, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_products", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_products\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        sku as product_id,\n\n        ----------  strings\n        name as product_name,\n        type as product_type,\n        description,\n\n        ----------  numerics\n        price as product_price,\n\n        ----------  booleans\n        type = 'food' as is_food_item,\n        type = 'drink' as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_products\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.616784Z", "completed_at": "2025-06-19T21:56:04.618390Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.618609Z", "completed_at": "2025-06-19T21:56:04.631029Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014984130859375, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.stg_stores", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"jaffle_platform\".\"main\".\"raw_stores\"\n\n),\n\nrenamed as (\n\n    select\n        ----------  ids\n        id as store_id,\n\n        ----------  strings\n        name as store_name,\n\n        ----------  timestamps\n        opened_at as opened_at,\n\n        ----------  numerics\n        tax_rate\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"jaffle_platform\".\"main\".\"stg_stores\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.633303Z", "completed_at": "2025-06-19T21:56:04.637360Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.637686Z", "completed_at": "2025-06-19T21:56:04.641823Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009891033172607422, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_supplies_supply_cost__0.56f9d0fff2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_supplies\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.644378Z", "completed_at": "2025-06-19T21:56:04.647625Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.647930Z", "completed_at": "2025-06-19T21:56:04.651887Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008868217468261719, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_perishable.b0ad96f801", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect perishable\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere perishable is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.654351Z", "completed_at": "2025-06-19T21:56:04.656498Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.656742Z", "completed_at": "2025-06-19T21:56:04.660686Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007706165313720703, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_product_id.ecc7615471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.663213Z", "completed_at": "2025-06-19T21:56:04.665340Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.665586Z", "completed_at": "2025-06-19T21:56:04.669855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007885932922363281, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_cost.5de3da4f1d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_cost\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_cost is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.672268Z", "completed_at": "2025-06-19T21:56:04.674322Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.674558Z", "completed_at": "2025-06-19T21:56:04.678232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007342815399169922, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_id.2638ae6962", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_id\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.680846Z", "completed_at": "2025-06-19T21:56:04.683831Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.684061Z", "completed_at": "2025-06-19T21:56:04.687992Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008623123168945312, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_supplies_supply_name.cc30977dd2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect supply_name\nfrom \"jaffle_platform\".\"main\".\"stg_supplies\"\nwhere supply_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.690775Z", "completed_at": "2025-06-19T21:56:04.692960Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.693188Z", "completed_at": "2025-06-19T21:56:04.697512Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00810098648071289, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_order_id.2063801f96", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.700112Z", "completed_at": "2025-06-19T21:56:04.702172Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.702401Z", "completed_at": "2025-06-19T21:56:04.706564Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0077931880950927734, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_order_item_id.26a7e2bc35", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.709093Z", "completed_at": "2025-06-19T21:56:04.711180Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.711430Z", "completed_at": "2025-06-19T21:56:04.715537Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007960081100463867, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_order_items_product_id.5154a8a6f6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.718499Z", "completed_at": "2025-06-19T21:56:04.720332Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.720551Z", "completed_at": "2025-06-19T21:56:04.749515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03236699104309082, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_order_items_order_item_id.90e333a108", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.751928Z", "completed_at": "2025-06-19T21:56:04.754079Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.754298Z", "completed_at": "2025-06-19T21:56:04.758946Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00830221176147461, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_orders_order_id.81cfe2fe64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.761371Z", "completed_at": "2025-06-19T21:56:04.765015Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.765263Z", "completed_at": "2025-06-19T21:56:04.814368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05435800552368164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_order_items_order_id__order_id__ref_stg_orders_.dbe9930c54", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select order_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where order_id is not null\n),\n\nparent as (\n    select order_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_orders\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.817210Z", "completed_at": "2025-06-19T21:56:04.819596Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.819888Z", "completed_at": "2025-06-19T21:56:04.839084Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023315906524658203, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_orders_order_id.e3b841c71a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.841610Z", "completed_at": "2025-06-19T21:56:04.845761Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.846179Z", "completed_at": "2025-06-19T21:56:04.852700Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012402772903442383, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.accepted_values_stg_products_product_type__beverage__jaffle.a9aed4257e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        product_type as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n    group by product_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'beverage','jaffle'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.855706Z", "completed_at": "2025-06-19T21:56:04.858596Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.858848Z", "completed_at": "2025-06-19T21:56:04.863524Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009449958801269531, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_products_product_price__0.d7d70a9cd2", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_products\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.866447Z", "completed_at": "2025-06-19T21:56:04.868823Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.869072Z", "completed_at": "2025-06-19T21:56:04.873161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00810384750366211, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_is_drink_item.339e87c30d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.875793Z", "completed_at": "2025-06-19T21:56:04.877817Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.878092Z", "completed_at": "2025-06-19T21:56:04.882554Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008188962936401367, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_is_food_item.8e5e6fcdb1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.884959Z", "completed_at": "2025-06-19T21:56:04.886792Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.887025Z", "completed_at": "2025-06-19T21:56:04.892272Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008618831634521484, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_id.6373b0acf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.894839Z", "completed_at": "2025-06-19T21:56:04.897188Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.897443Z", "completed_at": "2025-06-19T21:56:04.901865Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008382797241210938, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_name.0b59e4b939", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.904538Z", "completed_at": "2025-06-19T21:56:04.906754Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.906997Z", "completed_at": "2025-06-19T21:56:04.911337Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008248090744018555, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_price.d96fdc5e1e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.913820Z", "completed_at": "2025-06-19T21:56:04.915772Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.915998Z", "completed_at": "2025-06-19T21:56:04.919918Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00734400749206543, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_products_product_type.7dbdaaf4d8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_type\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.922581Z", "completed_at": "2025-06-19T21:56:04.925107Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.925355Z", "completed_at": "2025-06-19T21:56:04.933653Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012557029724121094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_order_items_product_id__product_id__ref_stg_products_.886a82c26c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.936315Z", "completed_at": "2025-06-19T21:56:04.938895Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.939150Z", "completed_at": "2025-06-19T21:56:04.943950Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008910894393920898, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_stg_supplies_product_id__product_id__ref_stg_products_.b24247ed0a", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"stg_supplies\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.946480Z", "completed_at": "2025-06-19T21:56:04.948629Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.948865Z", "completed_at": "2025-06-19T21:56:04.953821Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00864100456237793, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_products_product_id.7d950a1467", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_products\"\nwhere product_id is not null\ngroup by product_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.956297Z", "completed_at": "2025-06-19T21:56:04.958426Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.958655Z", "completed_at": "2025-06-19T21:56:04.963102Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00821232795715332, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_stg_stores_tax_rate__1__0.4b4a0f1520", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"stg_stores\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate >= 0\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not tax_rate <= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.965763Z", "completed_at": "2025-06-19T21:56:04.967681Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.967891Z", "completed_at": "2025-06-19T21:56:04.973107Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008569955825805664, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_opened_at.7656b80b64", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect opened_at\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere opened_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.975394Z", "completed_at": "2025-06-19T21:56:04.977248Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.977479Z", "completed_at": "2025-06-19T21:56:04.981374Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00748896598815918, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_store_id.ebecf07ec6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.984193Z", "completed_at": "2025-06-19T21:56:04.986256Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.986498Z", "completed_at": "2025-06-19T21:56:04.990972Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008074045181274414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_store_name.a23576c3a7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_name\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:04.993345Z", "completed_at": "2025-06-19T21:56:04.995253Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:04.995476Z", "completed_at": "2025-06-19T21:56:04.999249Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007163047790527344, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_stg_stores_tax_rate.b05a8726c6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect tax_rate\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere tax_rate is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:05.001623Z", "completed_at": "2025-06-19T21:56:05.003444Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:05.003659Z", "completed_at": "2025-06-19T21:56:05.009309Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008906126022338867, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_stg_stores_store_id.2e80d074c2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"stg_stores\"\nwhere store_id is not null\ngroup by store_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:05.011893Z", "completed_at": "2025-06-19T21:56:05.013585Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:05.013814Z", "completed_at": "2025-06-19T21:56:05.034855Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02376699447631836, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.supplies", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_supplies\"", "relation_name": "\"jaffle_platform\".\"main\".\"supplies\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:05.037234Z", "completed_at": "2025-06-19T21:56:05.040027Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:05.040254Z", "completed_at": "2025-06-19T21:56:05.996951Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.960517168045044, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.order_items", "compiled": true, "compiled_code": "with order_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_order_items\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\nproducts as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_products\"\n\n),\n\nsupplies as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_supplies\"\n\n),\n\norder_supplies_summary as (\n\n    select\n        product_id,\n        sum(supply_cost) as supply_cost\n    from supplies\n    group by 1\n\n),\n\njoined as (\n\n    select\n        order_items.*,\n\n        orders.order_date,\n        orders.store_id,\n\n        products.product_name,\n        \n    round(1.0 * products.product_price / 100, 2)\n as product_price,\n        products.is_food_item,\n        products.is_drink_item,\n\n        \n    round(1.0 * order_supplies_summary.supply_cost / 100, 2)\n as supply_cost,\n\n        -- calculated fields\n        \n    round(1.0 * products.product_price - coalesce(order_supplies_summary.supply_cost, 0) / 100, 2)\n as gross_profit_per_item\n\n    from order_items\n\n    left join orders on order_items.order_id = orders.order_id\n\n    left join products on order_items.product_id = products.product_id\n\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"order_items\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:05.999163Z", "completed_at": "2025-06-19T21:56:06.000769Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.000999Z", "completed_at": "2025-06-19T21:56:06.013150Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014712095260620117, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.products", "compiled": true, "compiled_code": "select * from \"jaffle_platform\".\"main\".\"stg_products\"", "relation_name": "\"jaffle_platform\".\"main\".\"products\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.015355Z", "completed_at": "2025-06-19T21:56:06.018893Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.019231Z", "completed_at": "2025-06-19T21:56:06.023686Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009774923324584961, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_order_items_product_price__0.43ad7e7f39", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not product_price >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.026335Z", "completed_at": "2025-06-19T21:56:06.028525Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.028763Z", "completed_at": "2025-06-19T21:56:06.032946Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007976293563842773, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_order_items_supply_cost__0.840b4d2b26", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"order_items\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not supply_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.035370Z", "completed_at": "2025-06-19T21:56:06.037464Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.037691Z", "completed_at": "2025-06-19T21:56:06.041477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007341623306274414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_gross_profit_per_item.48da24203b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gross_profit_per_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere gross_profit_per_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.044062Z", "completed_at": "2025-06-19T21:56:06.046278Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.046567Z", "completed_at": "2025-06-19T21:56:06.050333Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007539033889770508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_is_drink_item.6bb8231b5a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_drink_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_drink_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.052914Z", "completed_at": "2025-06-19T21:56:06.056035Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.056275Z", "completed_at": "2025-06-19T21:56:06.059828Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008233785629272461, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_is_food_item.c5a4aa0725", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect is_food_item\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere is_food_item is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.062278Z", "completed_at": "2025-06-19T21:56:06.064446Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.064680Z", "completed_at": "2025-06-19T21:56:06.068611Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007736682891845703, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_date.287d23d5d3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.071169Z", "completed_at": "2025-06-19T21:56:06.073551Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.073958Z", "completed_at": "2025-06-19T21:56:06.078876Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009321212768554688, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_id.0207cf2b74", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.081816Z", "completed_at": "2025-06-19T21:56:06.084087Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.084316Z", "completed_at": "2025-06-19T21:56:06.087956Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007447004318237305, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_order_item_id.c6fda366bd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.090488Z", "completed_at": "2025-06-19T21:56:06.094007Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.094240Z", "completed_at": "2025-06-19T21:56:06.097931Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008846759796142578, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_id.d5e49d7c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.100376Z", "completed_at": "2025-06-19T21:56:06.102502Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.102725Z", "completed_at": "2025-06-19T21:56:06.106672Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007579326629638672, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_name.86cd0cf29d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_name\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.108973Z", "completed_at": "2025-06-19T21:56:06.110908Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.111118Z", "completed_at": "2025-06-19T21:56:06.114844Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007200717926025391, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_product_price.9e29b4995d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_price\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere product_price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.117547Z", "completed_at": "2025-06-19T21:56:06.119444Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.119658Z", "completed_at": "2025-06-19T21:56:06.123239Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007111787796020508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_order_items_store_id.dcf872af5c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.125666Z", "completed_at": "2025-06-19T21:56:06.129297Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.129528Z", "completed_at": "2025-06-19T21:56:06.135439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011026144027709961, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_order_items_product_id__product_id__ref_stg_products_.32c12f5221", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where product_id is not null\n),\n\nparent as (\n    select product_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_products\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.138039Z", "completed_at": "2025-06-19T21:56:06.140817Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.141097Z", "completed_at": "2025-06-19T21:56:06.148594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011853933334350586, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_order_items_store_id__store_id__ref_stg_stores_.3506d5359d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"order_items\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.151065Z", "completed_at": "2025-06-19T21:56:06.153124Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.153352Z", "completed_at": "2025-06-19T21:56:06.177182Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027434825897216797, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_order_items_order_item_id.7d0a7e900a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"order_items\"\nwhere order_item_id is not null\ngroup by order_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.179958Z", "completed_at": "2025-06-19T21:56:06.182493Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.182718Z", "completed_at": "2025-06-19T21:56:06.884143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7049171924591064, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.orders", "compiled": true, "compiled_code": "with orders as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_orders\"\n\n),\n\norder_items as (\n\n    select * from \"jaffle_platform\".\"main\".\"order_items\"\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n        \n        sum(case when is_food_item then 1 else 0 end) as food_items_count,\n        sum(case when is_drink_item then 1 else 0 end) as drink_items_count,\n        count(*) as total_items_count,\n\n        \n    round(1.0 * sum(case when is_food_item then product_price * 100 else 0 end) / 100, 2)\n as food_revenue,\n        \n    round(1.0 * sum(case when is_drink_item then product_price * 100 else 0 end) / 100, 2)\n as drink_revenue,\n        \n    round(1.0 * sum(product_price * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(case when is_food_item then supply_cost * 100 else 0 end) / 100, 2)\n as food_cost,\n        \n    round(1.0 * sum(case when is_drink_item then supply_cost * 100 else 0 end) / 100, 2)\n as drink_cost,\n        \n    round(1.0 * sum(supply_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(case when is_food_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as food_profit,\n        \n    round(1.0 * sum(case when is_drink_item then gross_profit_per_item * 100 else 0 end) / 100, 2)\n as drink_profit,\n        \n    round(1.0 * sum(gross_profit_per_item * 100) / 100, 2)\n as total_profit\n\n    from order_items\n    group by 1\n\n),\n\njoined as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.store_id,\n        orders.order_date,\n        orders.status,\n\n        order_items_summary.food_items_count,\n        order_items_summary.drink_items_count,\n        order_items_summary.total_items_count,\n\n        order_items_summary.food_revenue,\n        order_items_summary.drink_revenue,\n        order_items_summary.total_revenue,\n\n        order_items_summary.food_cost,\n        order_items_summary.drink_cost,\n        order_items_summary.total_cost,\n\n        order_items_summary.food_profit,\n        order_items_summary.drink_profit,\n        order_items_summary.total_profit\n\n    from orders\n\n    inner join order_items_summary using (order_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"orders\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.886415Z", "completed_at": "2025-06-19T21:56:06.888738Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.888978Z", "completed_at": "2025-06-19T21:56:06.894168Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009016990661621094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.accepted_values_orders_status__completed.9c0d503484", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        status as value_field,\n        count(*) as n_records\n\n    from \"jaffle_platform\".\"main\".\"orders\"\n    group by status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'completed'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.896679Z", "completed_at": "2025-06-19T21:56:06.898658Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.898891Z", "completed_at": "2025-06-19T21:56:06.903902Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008673906326293945, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_cost__0.0da53292dd", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.906563Z", "completed_at": "2025-06-19T21:56:06.908604Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.908841Z", "completed_at": "2025-06-19T21:56:06.914377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009357213973999023, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_items_count__1.34dc2443a7", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items_count >= 1\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.917352Z", "completed_at": "2025-06-19T21:56:06.919422Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.919654Z", "completed_at": "2025-06-19T21:56:06.924343Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008616209030151367, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_orders_total_revenue__0.232d3c7cca", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"orders\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.927160Z", "completed_at": "2025-06-19T21:56:06.929380Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.929630Z", "completed_at": "2025-06-19T21:56:06.933942Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008185148239135742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_customer_id.c5f02694af", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.936690Z", "completed_at": "2025-06-19T21:56:06.938738Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.939132Z", "completed_at": "2025-06-19T21:56:06.943239Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007886886596679688, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_order_date.6910a855fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_date\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.945666Z", "completed_at": "2025-06-19T21:56:06.947488Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.947701Z", "completed_at": "2025-06-19T21:56:06.953018Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008577108383178711, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_order_id.cf6c17daed", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.955546Z", "completed_at": "2025-06-19T21:56:06.957705Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.957934Z", "completed_at": "2025-06-19T21:56:06.962131Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007828950881958008, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_status.8a27272c0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect status\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere status is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.964583Z", "completed_at": "2025-06-19T21:56:06.966710Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.967034Z", "completed_at": "2025-06-19T21:56:06.971515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008275985717773438, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_store_id.2bcd3b4d04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_id\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere store_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.974004Z", "completed_at": "2025-06-19T21:56:06.976203Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.976555Z", "completed_at": "2025-06-19T21:56:06.980910Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008301973342895508, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_items_count.553bda7b77", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_items_count\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_items_count is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.983680Z", "completed_at": "2025-06-19T21:56:06.986158Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.986399Z", "completed_at": "2025-06-19T21:56:06.991603Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009521245956420898, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_profit.b2d3d6fa60", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_profit\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_profit is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:06.994413Z", "completed_at": "2025-06-19T21:56:06.996631Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:06.996848Z", "completed_at": "2025-06-19T21:56:07.000581Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00751805305480957, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_orders_total_revenue.280ed887b4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_revenue\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere total_revenue is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.003298Z", "completed_at": "2025-06-19T21:56:07.005667Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.005962Z", "completed_at": "2025-06-19T21:56:07.012422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010539770126342773, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_orders_store_id__store_id__ref_stg_stores_.9afa770d8c", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where store_id is not null\n),\n\nparent as (\n    select store_id as to_field\n    from \"jaffle_platform\".\"main\".\"stg_stores\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.015069Z", "completed_at": "2025-06-19T21:56:07.017003Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.017228Z", "completed_at": "2025-06-19T21:56:07.034719Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020928144454956055, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_orders_order_id.fed79b3a6e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"orders\"\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.037584Z", "completed_at": "2025-06-19T21:56:07.040440Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.040688Z", "completed_at": "2025-06-19T21:56:07.083430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04670310020446777, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.jdbt.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"jaffle_platform\".\"main\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"jaffle_platform\".\"main\".\"orders\"\n\n),\n\ncustomer_orders as (\n\n    select\n        customer_id,\n        \n        min(order_date) as first_order_at,\n        max(order_date) as most_recent_order_at,\n        count(*) as number_of_orders,\n\n        sum(food_items_count) as total_food_items,\n        sum(drink_items_count) as total_drink_items,\n        sum(total_items_count) as total_items,\n\n        \n    round(1.0 * sum(food_revenue * 100) / 100, 2)\n as total_food_revenue,\n        \n    round(1.0 * sum(drink_revenue * 100) / 100, 2)\n as total_drink_revenue,\n        \n    round(1.0 * sum(total_revenue * 100) / 100, 2)\n as total_revenue,\n\n        \n    round(1.0 * sum(food_cost * 100) / 100, 2)\n as total_food_cost,\n        \n    round(1.0 * sum(drink_cost * 100) / 100, 2)\n as total_drink_cost,\n        \n    round(1.0 * sum(total_cost * 100) / 100, 2)\n as total_cost,\n\n        \n    round(1.0 * sum(food_profit * 100) / 100, 2)\n as total_food_profit,\n        \n    round(1.0 * sum(drink_profit * 100) / 100, 2)\n as total_drink_profit,\n        \n    round(1.0 * sum(total_profit * 100) / 100, 2)\n as total_profit,\n\n        \n    round(1.0 * sum(total_revenue * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_value,\n        \n    round(1.0 * sum(total_profit * 100) / nullif(count(*), 0) / 100, 2)\n as avg_order_profit\n\n    from orders\n    group by 1\n\n),\n\njoined as (\n\n    select\n        customers.customer_id,\n        customers.customer_name,\n\n        customer_orders.first_order_at,\n        customer_orders.most_recent_order_at,\n        customer_orders.number_of_orders,\n\n        customer_orders.total_food_items,\n        customer_orders.total_drink_items,\n        customer_orders.total_items,\n\n        customer_orders.total_food_revenue,\n        customer_orders.total_drink_revenue,\n        customer_orders.total_revenue,\n\n        customer_orders.total_food_cost,\n        customer_orders.total_drink_cost,\n        customer_orders.total_cost,\n\n        customer_orders.total_food_profit,\n        customer_orders.total_drink_profit,\n        customer_orders.total_profit,\n\n        customer_orders.avg_order_value,\n        customer_orders.avg_order_profit\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n)\n\nselect * from joined", "relation_name": "\"jaffle_platform\".\"main\".\"customers\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.087507Z", "completed_at": "2025-06-19T21:56:07.089974Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.090226Z", "completed_at": "2025-06-19T21:56:07.095072Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009334087371826172, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_avg_order_value__0.c1c1601f2c", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not avg_order_value >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.097633Z", "completed_at": "2025-06-19T21:56:07.099836Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.100070Z", "completed_at": "2025-06-19T21:56:07.104404Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008012056350708008, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_number_of_orders__0.037b1dd78b", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not number_of_orders >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.106966Z", "completed_at": "2025-06-19T21:56:07.110447Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.110793Z", "completed_at": "2025-06-19T21:56:07.114967Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009315967559814453, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_cost__0.0a4e71d80a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.117347Z", "completed_at": "2025-06-19T21:56:07.119805Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.120047Z", "completed_at": "2025-06-19T21:56:07.124294Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008634090423583984, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_cost__0.fa5c6d903f", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.127489Z", "completed_at": "2025-06-19T21:56:07.129624Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.129910Z", "completed_at": "2025-06-19T21:56:07.134907Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008801698684692383, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_items__0.9997c8c335", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.137439Z", "completed_at": "2025-06-19T21:56:07.139816Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.140068Z", "completed_at": "2025-06-19T21:56:07.145393Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00929880142211914, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_drink_revenue__0.b99e7e96c4", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_drink_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.148037Z", "completed_at": "2025-06-19T21:56:07.150157Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.150484Z", "completed_at": "2025-06-19T21:56:07.156551Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009879112243652344, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_cost__0.c65392d802", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_cost >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.160472Z", "completed_at": "2025-06-19T21:56:07.162566Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.162795Z", "completed_at": "2025-06-19T21:56:07.167295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008313894271850586, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_items__0.828da3e8bc", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.170362Z", "completed_at": "2025-06-19T21:56:07.172406Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.172635Z", "completed_at": "2025-06-19T21:56:07.177436Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008529186248779297, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_food_revenue__0.3e10988d11", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_food_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.179875Z", "completed_at": "2025-06-19T21:56:07.181844Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.182086Z", "completed_at": "2025-06-19T21:56:07.186501Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007879972457885742, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_items__0.3d7b0a080a", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_items >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.189240Z", "completed_at": "2025-06-19T21:56:07.191306Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.191535Z", "completed_at": "2025-06-19T21:56:07.196992Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009311914443969727, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.dbt_utils_accepted_range_customers_total_revenue__0.217c0fc785", "compiled": true, "compiled_code": "\n\nwith meet_condition as(\n  select *\n  from \"jaffle_platform\".\"main\".\"customers\"\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not total_revenue >= 0\n)\n\nselect *\nfrom validation_errors\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.199942Z", "completed_at": "2025-06-19T21:56:07.202211Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.202454Z", "completed_at": "2025-06-19T21:56:07.206187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007517814636230469, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_customers_customer_id.5c9bf9911d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.208524Z", "completed_at": "2025-06-19T21:56:07.210918Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.211292Z", "completed_at": "2025-06-19T21:56:07.215611Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008463859558105469, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.not_null_customers_customer_name.2bf8eaa065", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_name\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.218619Z", "completed_at": "2025-06-19T21:56:07.221367Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.221623Z", "completed_at": "2025-06-19T21:56:07.229260Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01207590103149414, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.relationships_orders_customer_id__customer_id__ref_customers_.c6ec7f58f2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_id as from_field\n    from \"jaffle_platform\".\"main\".\"orders\"\n    where customer_id is not null\n),\n\nparent as (\n    select customer_id as to_field\n    from \"jaffle_platform\".\"main\".\"customers\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-19T21:56:07.232055Z", "completed_at": "2025-06-19T21:56:07.234354Z"}, {"name": "execute", "started_at": "2025-06-19T21:56:07.234615Z", "completed_at": "2025-06-19T21:56:07.240954Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010498046875, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.jdbt.unique_customers_customer_id.c5af1ff4b1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_id as unique_field,\n    count(*) as n_records\n\nfrom \"jaffle_platform\".\"main\".\"customers\"\nwhere customer_id is not null\ngroup by customer_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 3.0165979862213135, "args": {"printer_width": 80, "quiet": false, "export_saved_queries": false, "indirect_selection": "eager", "populate_cache": true, "log_format_file": "json", "use_colors_file": true, "skip_nodes_if_on_run_start_fails": false, "require_nested_cumulative_type_params": false, "select": ["fqn:*"], "introspect": true, "send_anonymous_usage_stats": false, "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "require_resource_names_without_spaces": false, "which": "build", "show_resource_report": false, "log_level": "info", "log_file_max_bytes": 10485760, "source_freshness_run_project_hooks": false, "state_modified_compare_more_unrendered_values": false, "require_batched_execution_for_custom_microbatch_strategy": false, "state_modified_compare_vars": false, "resource_types": [], "vars": {}, "exclude_resource_types": [], "cache_selected_only": false, "exclude": [], "project_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt/jdbt", "defer": false, "require_yaml_configuration_for_mf_time_spines": false, "partial_parse_file_diff": true, "include_saved_query": false, "profiles_dir": "/Users/thomastrividic/code/python/jaffle-platform/dbt/jdbt", "write_json": true, "macro_debugging": false, "require_explicit_package_overrides_for_builtin_materializations": true, "print": true, "static_parser": true, "version_check": true, "log_level_file": "debug", "favor_state": false, "target_path": "target/jdbt-9e0a7c9-c343e19", "empty": false, "use_colors": true, "partial_parse": true, "invocation_command": "dbt build --select fqn:*", "log_path": "/Users/thomastrividic/code/python/jaffle-platform/dbt/jdbt/target/jdbt-9e0a7c9-c343e19", "show": false, "log_format": "json"}}